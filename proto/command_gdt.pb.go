// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: command_gdt.proto

package proto

import (
	reflect "reflect"
	sync "sync"

	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	common "github.com/hnhuaxi/proto/proto/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	anypb "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ImportGdtAdsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string           `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Account      *Account         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Filters      []*common.Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	ToEnterprise uint32           `protobuf:"varint,4,opt,name=to_enterprise,json=toEnterprise,proto3" json:"to_enterprise,omitempty"`
}

func (x *ImportGdtAdsCommand) Reset() {
	*x = ImportGdtAdsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGdtAdsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGdtAdsCommand) ProtoMessage() {}

func (x *ImportGdtAdsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGdtAdsCommand.ProtoReflect.Descriptor instead.
func (*ImportGdtAdsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{0}
}

func (x *ImportGdtAdsCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ImportGdtAdsCommand) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ImportGdtAdsCommand) GetFilters() []*common.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ImportGdtAdsCommand) GetToEnterprise() uint32 {
	if x != nil {
		return x.ToEnterprise
	}
	return 0
}

type ImportGdtAdgroupsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string           `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Account      *Account         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Filters      []*common.Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Ads          []*Ad            `protobuf:"bytes,4,rep,name=ads,proto3" json:"ads,omitempty"`
	ToEnterprise uint32           `protobuf:"varint,5,opt,name=to_enterprise,json=toEnterprise,proto3" json:"to_enterprise,omitempty"`
}

func (x *ImportGdtAdgroupsCommand) Reset() {
	*x = ImportGdtAdgroupsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGdtAdgroupsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGdtAdgroupsCommand) ProtoMessage() {}

func (x *ImportGdtAdgroupsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGdtAdgroupsCommand.ProtoReflect.Descriptor instead.
func (*ImportGdtAdgroupsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{1}
}

func (x *ImportGdtAdgroupsCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ImportGdtAdgroupsCommand) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ImportGdtAdgroupsCommand) GetFilters() []*common.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ImportGdtAdgroupsCommand) GetAds() []*Ad {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *ImportGdtAdgroupsCommand) GetToEnterprise() uint32 {
	if x != nil {
		return x.ToEnterprise
	}
	return 0
}

type ImportGdtConversionsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string           `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Account   *Account         `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Filters   []*common.Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
	Adgroups  []*Adgroup       `protobuf:"bytes,4,rep,name=adgroups,proto3" json:"adgroups,omitempty"`
}

func (x *ImportGdtConversionsCommand) Reset() {
	*x = ImportGdtConversionsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImportGdtConversionsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportGdtConversionsCommand) ProtoMessage() {}

func (x *ImportGdtConversionsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportGdtConversionsCommand.ProtoReflect.Descriptor instead.
func (*ImportGdtConversionsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{2}
}

func (x *ImportGdtConversionsCommand) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ImportGdtConversionsCommand) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ImportGdtConversionsCommand) GetFilters() []*common.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ImportGdtConversionsCommand) GetAdgroups() []*Adgroup {
	if x != nil {
		return x.Adgroups
	}
	return nil
}

type AssignEnterpriseAccountsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId uint32     `protobuf:"varint,1,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Accounts     []*Account `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty"`
}

func (x *AssignEnterpriseAccountsCommand) Reset() {
	*x = AssignEnterpriseAccountsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEnterpriseAccountsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEnterpriseAccountsCommand) ProtoMessage() {}

func (x *AssignEnterpriseAccountsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEnterpriseAccountsCommand.ProtoReflect.Descriptor instead.
func (*AssignEnterpriseAccountsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{3}
}

func (x *AssignEnterpriseAccountsCommand) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *AssignEnterpriseAccountsCommand) GetAccounts() []*Account {
	if x != nil {
		return x.Accounts
	}
	return nil
}

type AssignEnterpriseAdsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId uint32 `protobuf:"varint,1,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Ads          []*Ad  `protobuf:"bytes,2,rep,name=ads,proto3" json:"ads,omitempty"`
}

func (x *AssignEnterpriseAdsCommand) Reset() {
	*x = AssignEnterpriseAdsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEnterpriseAdsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEnterpriseAdsCommand) ProtoMessage() {}

func (x *AssignEnterpriseAdsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEnterpriseAdsCommand.ProtoReflect.Descriptor instead.
func (*AssignEnterpriseAdsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{4}
}

func (x *AssignEnterpriseAdsCommand) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *AssignEnterpriseAdsCommand) GetAds() []*Ad {
	if x != nil {
		return x.Ads
	}
	return nil
}

type AssignEnterpriseAdgroupsCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EnterpriseId uint32     `protobuf:"varint,1,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Adgroups     []*Adgroup `protobuf:"bytes,2,rep,name=adgroups,proto3" json:"adgroups,omitempty"`
}

func (x *AssignEnterpriseAdgroupsCommand) Reset() {
	*x = AssignEnterpriseAdgroupsCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AssignEnterpriseAdgroupsCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AssignEnterpriseAdgroupsCommand) ProtoMessage() {}

func (x *AssignEnterpriseAdgroupsCommand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AssignEnterpriseAdgroupsCommand.ProtoReflect.Descriptor instead.
func (*AssignEnterpriseAdgroupsCommand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{5}
}

func (x *AssignEnterpriseAdgroupsCommand) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *AssignEnterpriseAdgroupsCommand) GetAdgroups() []*Adgroup {
	if x != nil {
		return x.Adgroups
	}
	return nil
}

type GdtAD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdId                  uint64            `protobuf:"varint,1,opt,name=ad_id,json=adId,proto3" json:"ad_id,omitempty"`
	AdName                string            `protobuf:"bytes,2,opt,name=ad_name,json=adName,proto3" json:"ad_name,omitempty"`
	Adcreative            *GdtAD_Adcreative `protobuf:"bytes,3,opt,name=adcreative,proto3" json:"adcreative,omitempty"`
	AdcreativeId          uint64            `protobuf:"varint,4,opt,name=adcreative_id,json=adcreativeId,proto3" json:"adcreative_id,omitempty"`
	AdgroupId             uint64            `protobuf:"varint,5,opt,name=adgroup_id,json=adgroupId,proto3" json:"adgroup_id,omitempty"`
	CampaignId            uint64            `protobuf:"varint,6,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	ClickTrackingUrl      string            `protobuf:"bytes,7,opt,name=click_tracking_url,json=clickTrackingUrl,proto3" json:"click_tracking_url,omitempty"`
	ConfiguredStatus      string            `protobuf:"bytes,8,opt,name=configured_status,json=configuredStatus,proto3" json:"configured_status,omitempty"`
	CreatedTime           uint32            `protobuf:"varint,9,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	ImpressionTrackingUrl string            `protobuf:"bytes,10,opt,name=impression_tracking_url,json=impressionTrackingUrl,proto3" json:"impression_tracking_url,omitempty"`
	IsDeleted             bool              `protobuf:"varint,11,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	IsDynamicCreative     bool              `protobuf:"varint,12,opt,name=is_dynamic_creative,json=isDynamicCreative,proto3" json:"is_dynamic_creative,omitempty"`
	LastModifiedTime      uint32            `protobuf:"varint,13,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
	RejectMessage         string            `protobuf:"bytes,14,opt,name=reject_message,json=rejectMessage,proto3" json:"reject_message,omitempty"`
	SystemStatus          string            `protobuf:"bytes,15,opt,name=system_status,json=systemStatus,proto3" json:"system_status,omitempty"`
}

func (x *GdtAD) Reset() {
	*x = GdtAD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAD) ProtoMessage() {}

func (x *GdtAD) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAD.ProtoReflect.Descriptor instead.
func (*GdtAD) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{6}
}

func (x *GdtAD) GetAdId() uint64 {
	if x != nil {
		return x.AdId
	}
	return 0
}

func (x *GdtAD) GetAdName() string {
	if x != nil {
		return x.AdName
	}
	return ""
}

func (x *GdtAD) GetAdcreative() *GdtAD_Adcreative {
	if x != nil {
		return x.Adcreative
	}
	return nil
}

func (x *GdtAD) GetAdcreativeId() uint64 {
	if x != nil {
		return x.AdcreativeId
	}
	return 0
}

func (x *GdtAD) GetAdgroupId() uint64 {
	if x != nil {
		return x.AdgroupId
	}
	return 0
}

func (x *GdtAD) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *GdtAD) GetClickTrackingUrl() string {
	if x != nil {
		return x.ClickTrackingUrl
	}
	return ""
}

func (x *GdtAD) GetConfiguredStatus() string {
	if x != nil {
		return x.ConfiguredStatus
	}
	return ""
}

func (x *GdtAD) GetCreatedTime() uint32 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *GdtAD) GetImpressionTrackingUrl() string {
	if x != nil {
		return x.ImpressionTrackingUrl
	}
	return ""
}

func (x *GdtAD) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *GdtAD) GetIsDynamicCreative() bool {
	if x != nil {
		return x.IsDynamicCreative
	}
	return false
}

func (x *GdtAD) GetLastModifiedTime() uint32 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *GdtAD) GetRejectMessage() string {
	if x != nil {
		return x.RejectMessage
	}
	return ""
}

func (x *GdtAD) GetSystemStatus() string {
	if x != nil {
		return x.SystemStatus
	}
	return ""
}

type ReceivedGdtAdsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ads          []*GdtAD `protobuf:"bytes,1,rep,name=ads,proto3" json:"ads,omitempty"`
	AccountId    string   `protobuf:"bytes,2,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Account      *Account `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	ToEnterprise uint32   `protobuf:"varint,4,opt,name=to_enterprise,json=toEnterprise,proto3" json:"to_enterprise,omitempty"`
}

func (x *ReceivedGdtAdsEvent) Reset() {
	*x = ReceivedGdtAdsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedGdtAdsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedGdtAdsEvent) ProtoMessage() {}

func (x *ReceivedGdtAdsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedGdtAdsEvent.ProtoReflect.Descriptor instead.
func (*ReceivedGdtAdsEvent) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{7}
}

func (x *ReceivedGdtAdsEvent) GetAds() []*GdtAD {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *ReceivedGdtAdsEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReceivedGdtAdsEvent) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ReceivedGdtAdsEvent) GetToEnterprise() uint32 {
	if x != nil {
		return x.ToEnterprise
	}
	return 0
}

type GdtConversion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessStatus          string `protobuf:"bytes,1,opt,name=access_status,json=accessStatus,proto3" json:"access_status,omitempty"`
	AccessType            string `protobuf:"bytes,2,opt,name=access_type,json=accessType,proto3" json:"access_type,omitempty"`
	ClaimType             string `protobuf:"bytes,3,opt,name=claim_type,json=claimType,proto3" json:"claim_type,omitempty"`
	ConversionId          uint32 `protobuf:"varint,4,opt,name=conversion_id,json=conversionId,proto3" json:"conversion_id,omitempty"`
	ConversionLinkId      uint32 `protobuf:"varint,5,opt,name=conversion_link_id,json=conversionLinkId,proto3" json:"conversion_link_id,omitempty"`
	ConversionName        string `protobuf:"bytes,6,opt,name=conversion_name,json=conversionName,proto3" json:"conversion_name,omitempty"`
	ConversionScene       string `protobuf:"bytes,7,opt,name=conversion_scene,json=conversionScene,proto3" json:"conversion_scene,omitempty"`
	CreateSourceType      string `protobuf:"bytes,8,opt,name=create_source_type,json=createSourceType,proto3" json:"create_source_type,omitempty"`
	FeedbackUrl           string `protobuf:"bytes,9,opt,name=feedback_url,json=feedbackUrl,proto3" json:"feedback_url,omitempty"`
	ImpressionFeedbackUrl string `protobuf:"bytes,10,opt,name=impression_feedback_url,json=impressionFeedbackUrl,proto3" json:"impression_feedback_url,omitempty"`
	IsDeleted             bool   `protobuf:"varint,11,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	OptimizationGoal      string `protobuf:"bytes,12,opt,name=optimization_goal,json=optimizationGoal,proto3" json:"optimization_goal,omitempty"`
	PromotedObjectId      string `protobuf:"bytes,13,opt,name=promoted_object_id,json=promotedObjectId,proto3" json:"promoted_object_id,omitempty"`
	SelfAttributed        bool   `protobuf:"varint,14,opt,name=self_attributed,json=selfAttributed,proto3" json:"self_attributed,omitempty"`
	SiteSetEnable         bool   `protobuf:"varint,15,opt,name=site_set_enable,json=siteSetEnable,proto3" json:"site_set_enable,omitempty"`
	UserActionSetId       uint32 `protobuf:"varint,16,opt,name=user_action_set_id,json=userActionSetId,proto3" json:"user_action_set_id,omitempty"`
}

func (x *GdtConversion) Reset() {
	*x = GdtConversion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtConversion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtConversion) ProtoMessage() {}

func (x *GdtConversion) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtConversion.ProtoReflect.Descriptor instead.
func (*GdtConversion) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{8}
}

func (x *GdtConversion) GetAccessStatus() string {
	if x != nil {
		return x.AccessStatus
	}
	return ""
}

func (x *GdtConversion) GetAccessType() string {
	if x != nil {
		return x.AccessType
	}
	return ""
}

func (x *GdtConversion) GetClaimType() string {
	if x != nil {
		return x.ClaimType
	}
	return ""
}

func (x *GdtConversion) GetConversionId() uint32 {
	if x != nil {
		return x.ConversionId
	}
	return 0
}

func (x *GdtConversion) GetConversionLinkId() uint32 {
	if x != nil {
		return x.ConversionLinkId
	}
	return 0
}

func (x *GdtConversion) GetConversionName() string {
	if x != nil {
		return x.ConversionName
	}
	return ""
}

func (x *GdtConversion) GetConversionScene() string {
	if x != nil {
		return x.ConversionScene
	}
	return ""
}

func (x *GdtConversion) GetCreateSourceType() string {
	if x != nil {
		return x.CreateSourceType
	}
	return ""
}

func (x *GdtConversion) GetFeedbackUrl() string {
	if x != nil {
		return x.FeedbackUrl
	}
	return ""
}

func (x *GdtConversion) GetImpressionFeedbackUrl() string {
	if x != nil {
		return x.ImpressionFeedbackUrl
	}
	return ""
}

func (x *GdtConversion) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *GdtConversion) GetOptimizationGoal() string {
	if x != nil {
		return x.OptimizationGoal
	}
	return ""
}

func (x *GdtConversion) GetPromotedObjectId() string {
	if x != nil {
		return x.PromotedObjectId
	}
	return ""
}

func (x *GdtConversion) GetSelfAttributed() bool {
	if x != nil {
		return x.SelfAttributed
	}
	return false
}

func (x *GdtConversion) GetSiteSetEnable() bool {
	if x != nil {
		return x.SiteSetEnable
	}
	return false
}

func (x *GdtConversion) GetUserActionSetId() uint32 {
	if x != nil {
		return x.UserActionSetId
	}
	return 0
}

type GdtAdgroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdCount              uint32                `protobuf:"varint,1,opt,name=ad_count,json=adCount,proto3" json:"ad_count,omitempty"`
	AdgroupId            uint64                `protobuf:"varint,2,opt,name=adgroup_id,json=adgroupId,proto3" json:"adgroup_id,omitempty"`
	AdgroupName          string                `protobuf:"bytes,3,opt,name=adgroup_name,json=adgroupName,proto3" json:"adgroup_name,omitempty"`
	AutomaticSiteEnabled bool                  `protobuf:"varint,4,opt,name=automatic_site_enabled,json=automaticSiteEnabled,proto3" json:"automatic_site_enabled,omitempty"`
	BeginDate            string                `protobuf:"bytes,5,opt,name=begin_date,json=beginDate,proto3" json:"begin_date,omitempty"`
	BidAmount            uint32                `protobuf:"varint,6,opt,name=bid_amount,json=bidAmount,proto3" json:"bid_amount,omitempty"`
	BidMode              string                `protobuf:"bytes,7,opt,name=bid_mode,json=bidMode,proto3" json:"bid_mode,omitempty"`
	BidStrategy          string                `protobuf:"bytes,8,opt,name=bid_strategy,json=bidStrategy,proto3" json:"bid_strategy,omitempty"`
	CampaignId           uint64                `protobuf:"varint,9,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	ConfiguredStatus     string                `protobuf:"bytes,10,opt,name=configured_status,json=configuredStatus,proto3" json:"configured_status,omitempty"`
	ConversionId         uint32                `protobuf:"varint,11,opt,name=conversion_id,json=conversionId,proto3" json:"conversion_id,omitempty"`
	Conversion           *GdtConversion        `protobuf:"bytes,12,opt,name=conversion,proto3" json:"conversion,omitempty"`
	CostGuaranteeMessage string                `protobuf:"bytes,13,opt,name=cost_guarantee_message,json=costGuaranteeMessage,proto3" json:"cost_guarantee_message,omitempty"`
	CostGuaranteeStatus  string                `protobuf:"bytes,14,opt,name=cost_guarantee_status,json=costGuaranteeStatus,proto3" json:"cost_guarantee_status,omitempty"`
	CreatedTime          uint32                `protobuf:"varint,15,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	DailyBudget          uint32                `protobuf:"varint,16,opt,name=daily_budget,json=dailyBudget,proto3" json:"daily_budget,omitempty"`
	EndDate              string                `protobuf:"bytes,17,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	ExpandEnabled        bool                  `protobuf:"varint,18,opt,name=expand_enabled,json=expandEnabled,proto3" json:"expand_enabled,omitempty"`
	ExpandTargeting      []*anypb.Any          `protobuf:"bytes,19,rep,name=expand_targeting,json=expandTargeting,proto3" json:"expand_targeting,omitempty"`
	LastModifiedTime     uint32                `protobuf:"varint,20,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
	OptimizationGoal     string                `protobuf:"bytes,21,opt,name=optimization_goal,json=optimizationGoal,proto3" json:"optimization_goal,omitempty"`
	PromotedObjectType   string                `protobuf:"bytes,22,opt,name=promoted_object_type,json=promotedObjectType,proto3" json:"promoted_object_type,omitempty"`
	SiteSet              []string              `protobuf:"bytes,23,rep,name=site_set,json=siteSet,proto3" json:"site_set,omitempty"`
	Status               string                `protobuf:"bytes,24,opt,name=status,proto3" json:"status,omitempty"`
	SystemStatus         string                `protobuf:"bytes,25,opt,name=system_status,json=systemStatus,proto3" json:"system_status,omitempty"`
	Targeting            *GdtAdgroup_Targeting `protobuf:"bytes,26,opt,name=targeting,proto3" json:"targeting,omitempty"`
	TargetingId          uint32                `protobuf:"varint,27,opt,name=targeting_id,json=targetingId,proto3" json:"targeting_id,omitempty"`
	TargetingTranslation string                `protobuf:"bytes,28,opt,name=targeting_translation,json=targetingTranslation,proto3" json:"targeting_translation,omitempty"`
	TimeSeries           string                `protobuf:"bytes,29,opt,name=time_series,json=timeSeries,proto3" json:"time_series,omitempty"`
}

func (x *GdtAdgroup) Reset() {
	*x = GdtAdgroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAdgroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAdgroup) ProtoMessage() {}

func (x *GdtAdgroup) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAdgroup.ProtoReflect.Descriptor instead.
func (*GdtAdgroup) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{9}
}

func (x *GdtAdgroup) GetAdCount() uint32 {
	if x != nil {
		return x.AdCount
	}
	return 0
}

func (x *GdtAdgroup) GetAdgroupId() uint64 {
	if x != nil {
		return x.AdgroupId
	}
	return 0
}

func (x *GdtAdgroup) GetAdgroupName() string {
	if x != nil {
		return x.AdgroupName
	}
	return ""
}

func (x *GdtAdgroup) GetAutomaticSiteEnabled() bool {
	if x != nil {
		return x.AutomaticSiteEnabled
	}
	return false
}

func (x *GdtAdgroup) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *GdtAdgroup) GetBidAmount() uint32 {
	if x != nil {
		return x.BidAmount
	}
	return 0
}

func (x *GdtAdgroup) GetBidMode() string {
	if x != nil {
		return x.BidMode
	}
	return ""
}

func (x *GdtAdgroup) GetBidStrategy() string {
	if x != nil {
		return x.BidStrategy
	}
	return ""
}

func (x *GdtAdgroup) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *GdtAdgroup) GetConfiguredStatus() string {
	if x != nil {
		return x.ConfiguredStatus
	}
	return ""
}

func (x *GdtAdgroup) GetConversionId() uint32 {
	if x != nil {
		return x.ConversionId
	}
	return 0
}

func (x *GdtAdgroup) GetConversion() *GdtConversion {
	if x != nil {
		return x.Conversion
	}
	return nil
}

func (x *GdtAdgroup) GetCostGuaranteeMessage() string {
	if x != nil {
		return x.CostGuaranteeMessage
	}
	return ""
}

func (x *GdtAdgroup) GetCostGuaranteeStatus() string {
	if x != nil {
		return x.CostGuaranteeStatus
	}
	return ""
}

func (x *GdtAdgroup) GetCreatedTime() uint32 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *GdtAdgroup) GetDailyBudget() uint32 {
	if x != nil {
		return x.DailyBudget
	}
	return 0
}

func (x *GdtAdgroup) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GdtAdgroup) GetExpandEnabled() bool {
	if x != nil {
		return x.ExpandEnabled
	}
	return false
}

func (x *GdtAdgroup) GetExpandTargeting() []*anypb.Any {
	if x != nil {
		return x.ExpandTargeting
	}
	return nil
}

func (x *GdtAdgroup) GetLastModifiedTime() uint32 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *GdtAdgroup) GetOptimizationGoal() string {
	if x != nil {
		return x.OptimizationGoal
	}
	return ""
}

func (x *GdtAdgroup) GetPromotedObjectType() string {
	if x != nil {
		return x.PromotedObjectType
	}
	return ""
}

func (x *GdtAdgroup) GetSiteSet() []string {
	if x != nil {
		return x.SiteSet
	}
	return nil
}

func (x *GdtAdgroup) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GdtAdgroup) GetSystemStatus() string {
	if x != nil {
		return x.SystemStatus
	}
	return ""
}

func (x *GdtAdgroup) GetTargeting() *GdtAdgroup_Targeting {
	if x != nil {
		return x.Targeting
	}
	return nil
}

func (x *GdtAdgroup) GetTargetingId() uint32 {
	if x != nil {
		return x.TargetingId
	}
	return 0
}

func (x *GdtAdgroup) GetTargetingTranslation() string {
	if x != nil {
		return x.TargetingTranslation
	}
	return ""
}

func (x *GdtAdgroup) GetTimeSeries() string {
	if x != nil {
		return x.TimeSeries
	}
	return ""
}

type ReceivedGdtAdgroupsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId    string        `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Adgroups     []*GdtAdgroup `protobuf:"bytes,2,rep,name=adgroups,proto3" json:"adgroups,omitempty"`
	Ads          []*Ad         `protobuf:"bytes,3,rep,name=ads,proto3" json:"ads,omitempty"`
	Account      *Account      `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	ToEnterprise uint32        `protobuf:"varint,5,opt,name=to_enterprise,json=toEnterprise,proto3" json:"to_enterprise,omitempty"`
}

func (x *ReceivedGdtAdgroupsEvent) Reset() {
	*x = ReceivedGdtAdgroupsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedGdtAdgroupsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedGdtAdgroupsEvent) ProtoMessage() {}

func (x *ReceivedGdtAdgroupsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedGdtAdgroupsEvent.ProtoReflect.Descriptor instead.
func (*ReceivedGdtAdgroupsEvent) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{10}
}

func (x *ReceivedGdtAdgroupsEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReceivedGdtAdgroupsEvent) GetAdgroups() []*GdtAdgroup {
	if x != nil {
		return x.Adgroups
	}
	return nil
}

func (x *ReceivedGdtAdgroupsEvent) GetAds() []*Ad {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *ReceivedGdtAdgroupsEvent) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ReceivedGdtAdgroupsEvent) GetToEnterprise() uint32 {
	if x != nil {
		return x.ToEnterprise
	}
	return 0
}

type ReceivedGdtConversionsEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId   string           `protobuf:"bytes,1,opt,name=account_id,json=accountId,proto3" json:"account_id,omitempty"`
	Adgroupss   []*Adgroup       `protobuf:"bytes,2,rep,name=adgroupss,proto3" json:"adgroupss,omitempty"`
	Account     *Account         `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Conversions []*GdtConversion `protobuf:"bytes,4,rep,name=conversions,proto3" json:"conversions,omitempty"`
}

func (x *ReceivedGdtConversionsEvent) Reset() {
	*x = ReceivedGdtConversionsEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReceivedGdtConversionsEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceivedGdtConversionsEvent) ProtoMessage() {}

func (x *ReceivedGdtConversionsEvent) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceivedGdtConversionsEvent.ProtoReflect.Descriptor instead.
func (*ReceivedGdtConversionsEvent) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{11}
}

func (x *ReceivedGdtConversionsEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (x *ReceivedGdtConversionsEvent) GetAdgroupss() []*Adgroup {
	if x != nil {
		return x.Adgroupss
	}
	return nil
}

func (x *ReceivedGdtConversionsEvent) GetAccount() *Account {
	if x != nil {
		return x.Account
	}
	return nil
}

func (x *ReceivedGdtConversionsEvent) GetConversions() []*GdtConversion {
	if x != nil {
		return x.Conversions
	}
	return nil
}

type GdtAD_Brand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrandImg  string `protobuf:"bytes,1,opt,name=brand_img,json=brandImg,proto3" json:"brand_img,omitempty"`
	BrandName string `protobuf:"bytes,2,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
}

func (x *GdtAD_Brand) Reset() {
	*x = GdtAD_Brand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAD_Brand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAD_Brand) ProtoMessage() {}

func (x *GdtAD_Brand) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAD_Brand.ProtoReflect.Descriptor instead.
func (*GdtAD_Brand) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{6, 0}
}

func (x *GdtAD_Brand) GetBrandImg() string {
	if x != nil {
		return x.BrandImg
	}
	return ""
}

func (x *GdtAD_Brand) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

type GdtAD_AdcreativeElements struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Brand       *GdtAD_Brand `protobuf:"bytes,1,opt,name=brand,proto3" json:"brand,omitempty"`
	Description string       `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Image       string       `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
}

func (x *GdtAD_AdcreativeElements) Reset() {
	*x = GdtAD_AdcreativeElements{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAD_AdcreativeElements) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAD_AdcreativeElements) ProtoMessage() {}

func (x *GdtAD_AdcreativeElements) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAD_AdcreativeElements.ProtoReflect.Descriptor instead.
func (*GdtAD_AdcreativeElements) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{6, 1}
}

func (x *GdtAD_AdcreativeElements) GetBrand() *GdtAD_Brand {
	if x != nil {
		return x.Brand
	}
	return nil
}

func (x *GdtAD_AdcreativeElements) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GdtAD_AdcreativeElements) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

type GdtAD_PageSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	PageId  uint64 `protobuf:"varint,2,opt,name=page_id,json=pageId,proto3" json:"page_id,omitempty"`
}

func (x *GdtAD_PageSpec) Reset() {
	*x = GdtAD_PageSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAD_PageSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAD_PageSpec) ProtoMessage() {}

func (x *GdtAD_PageSpec) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAD_PageSpec.ProtoReflect.Descriptor instead.
func (*GdtAD_PageSpec) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{6, 2}
}

func (x *GdtAD_PageSpec) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *GdtAD_PageSpec) GetPageId() uint64 {
	if x != nil {
		return x.PageId
	}
	return 0
}

type GdtAD_Adcreative struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdcreativeElements        *GdtAD_AdcreativeElements `protobuf:"bytes,1,opt,name=adcreative_elements,json=adcreativeElements,proto3" json:"adcreative_elements,omitempty"`
	AdcreativeId              uint64                    `protobuf:"varint,2,opt,name=adcreative_id,json=adcreativeId,proto3" json:"adcreative_id,omitempty"`
	AdcreativeName            string                    `protobuf:"bytes,3,opt,name=adcreative_name,json=adcreativeName,proto3" json:"adcreative_name,omitempty"`
	AdcreativeTemplateId      uint32                    `protobuf:"varint,4,opt,name=adcreative_template_id,json=adcreativeTemplateId,proto3" json:"adcreative_template_id,omitempty"`
	CampaignId                uint64                    `protobuf:"varint,5,opt,name=campaign_id,json=campaignId,proto3" json:"campaign_id,omitempty"`
	CreatedTime               uint32                    `protobuf:"varint,6,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	CreativeTemplateCategory  string                    `protobuf:"bytes,7,opt,name=creative_template_category,json=creativeTemplateCategory,proto3" json:"creative_template_category,omitempty"`
	EnableBreakthroughSiteset bool                      `protobuf:"varint,8,opt,name=enable_breakthrough_siteset,json=enableBreakthroughSiteset,proto3" json:"enable_breakthrough_siteset,omitempty"`
	LastModifiedTime          uint32                    `protobuf:"varint,9,opt,name=last_modified_time,json=lastModifiedTime,proto3" json:"last_modified_time,omitempty"`
	PageSpec                  *GdtAD_PageSpec           `protobuf:"bytes,10,opt,name=page_spec,json=pageSpec,proto3" json:"page_spec,omitempty"`
	PageType                  string                    `protobuf:"bytes,11,opt,name=page_type,json=pageType,proto3" json:"page_type,omitempty"`
	PlayablePageMaterialId    string                    `protobuf:"bytes,12,opt,name=playable_page_material_id,json=playablePageMaterialId,proto3" json:"playable_page_material_id,omitempty"`
	PromotedObjectId          string                    `protobuf:"bytes,13,opt,name=promoted_object_id,json=promotedObjectId,proto3" json:"promoted_object_id,omitempty"`
	PromotedObjectType        string                    `protobuf:"bytes,14,opt,name=promoted_object_type,json=promotedObjectType,proto3" json:"promoted_object_type,omitempty"`
	SiteSet                   []string                  `protobuf:"bytes,15,rep,name=site_set,json=siteSet,proto3" json:"site_set,omitempty"`
}

func (x *GdtAD_Adcreative) Reset() {
	*x = GdtAD_Adcreative{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAD_Adcreative) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAD_Adcreative) ProtoMessage() {}

func (x *GdtAD_Adcreative) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAD_Adcreative.ProtoReflect.Descriptor instead.
func (*GdtAD_Adcreative) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{6, 3}
}

func (x *GdtAD_Adcreative) GetAdcreativeElements() *GdtAD_AdcreativeElements {
	if x != nil {
		return x.AdcreativeElements
	}
	return nil
}

func (x *GdtAD_Adcreative) GetAdcreativeId() uint64 {
	if x != nil {
		return x.AdcreativeId
	}
	return 0
}

func (x *GdtAD_Adcreative) GetAdcreativeName() string {
	if x != nil {
		return x.AdcreativeName
	}
	return ""
}

func (x *GdtAD_Adcreative) GetAdcreativeTemplateId() uint32 {
	if x != nil {
		return x.AdcreativeTemplateId
	}
	return 0
}

func (x *GdtAD_Adcreative) GetCampaignId() uint64 {
	if x != nil {
		return x.CampaignId
	}
	return 0
}

func (x *GdtAD_Adcreative) GetCreatedTime() uint32 {
	if x != nil {
		return x.CreatedTime
	}
	return 0
}

func (x *GdtAD_Adcreative) GetCreativeTemplateCategory() string {
	if x != nil {
		return x.CreativeTemplateCategory
	}
	return ""
}

func (x *GdtAD_Adcreative) GetEnableBreakthroughSiteset() bool {
	if x != nil {
		return x.EnableBreakthroughSiteset
	}
	return false
}

func (x *GdtAD_Adcreative) GetLastModifiedTime() uint32 {
	if x != nil {
		return x.LastModifiedTime
	}
	return 0
}

func (x *GdtAD_Adcreative) GetPageSpec() *GdtAD_PageSpec {
	if x != nil {
		return x.PageSpec
	}
	return nil
}

func (x *GdtAD_Adcreative) GetPageType() string {
	if x != nil {
		return x.PageType
	}
	return ""
}

func (x *GdtAD_Adcreative) GetPlayablePageMaterialId() string {
	if x != nil {
		return x.PlayablePageMaterialId
	}
	return ""
}

func (x *GdtAD_Adcreative) GetPromotedObjectId() string {
	if x != nil {
		return x.PromotedObjectId
	}
	return ""
}

func (x *GdtAD_Adcreative) GetPromotedObjectType() string {
	if x != nil {
		return x.PromotedObjectType
	}
	return ""
}

func (x *GdtAD_Adcreative) GetSiteSet() []string {
	if x != nil {
		return x.SiteSet
	}
	return nil
}

type GdtAdgroup_Age struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Max uint32 `protobuf:"varint,1,opt,name=max,proto3" json:"max,omitempty"`
	Min uint32 `protobuf:"varint,2,opt,name=min,proto3" json:"min,omitempty"`
}

func (x *GdtAdgroup_Age) Reset() {
	*x = GdtAdgroup_Age{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAdgroup_Age) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAdgroup_Age) ProtoMessage() {}

func (x *GdtAdgroup_Age) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAdgroup_Age.ProtoReflect.Descriptor instead.
func (*GdtAdgroup_Age) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GdtAdgroup_Age) GetMax() uint32 {
	if x != nil {
		return x.Max
	}
	return 0
}

func (x *GdtAdgroup_Age) GetMin() uint32 {
	if x != nil {
		return x.Min
	}
	return 0
}

type GdtAdgroup_GeoLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocationTypes []string `protobuf:"bytes,1,rep,name=location_types,json=locationTypes,proto3" json:"location_types,omitempty"`
	Regions       []uint32 `protobuf:"varint,2,rep,packed,name=regions,proto3" json:"regions,omitempty"`
}

func (x *GdtAdgroup_GeoLocation) Reset() {
	*x = GdtAdgroup_GeoLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAdgroup_GeoLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAdgroup_GeoLocation) ProtoMessage() {}

func (x *GdtAdgroup_GeoLocation) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAdgroup_GeoLocation.ProtoReflect.Descriptor instead.
func (*GdtAdgroup_GeoLocation) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{9, 1}
}

func (x *GdtAdgroup_GeoLocation) GetLocationTypes() []string {
	if x != nil {
		return x.LocationTypes
	}
	return nil
}

func (x *GdtAdgroup_GeoLocation) GetRegions() []uint32 {
	if x != nil {
		return x.Regions
	}
	return nil
}

type GdtAdgroup_Targeting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Age         []*GdtAdgroup_Age       `protobuf:"bytes,1,rep,name=age,proto3" json:"age,omitempty"`
	Gender      []string                `protobuf:"bytes,2,rep,name=gender,proto3" json:"gender,omitempty"`
	GeoLocation *GdtAdgroup_GeoLocation `protobuf:"bytes,3,opt,name=geo_location,json=geoLocation,proto3" json:"geo_location,omitempty"`
}

func (x *GdtAdgroup_Targeting) Reset() {
	*x = GdtAdgroup_Targeting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_command_gdt_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GdtAdgroup_Targeting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GdtAdgroup_Targeting) ProtoMessage() {}

func (x *GdtAdgroup_Targeting) ProtoReflect() protoreflect.Message {
	mi := &file_command_gdt_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GdtAdgroup_Targeting.ProtoReflect.Descriptor instead.
func (*GdtAdgroup_Targeting) Descriptor() ([]byte, []int) {
	return file_command_gdt_proto_rawDescGZIP(), []int{9, 2}
}

func (x *GdtAdgroup_Targeting) GetAge() []*GdtAdgroup_Age {
	if x != nil {
		return x.Age
	}
	return nil
}

func (x *GdtAdgroup_Targeting) GetGender() []string {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *GdtAdgroup_Targeting) GetGeoLocation() *GdtAdgroup_GeoLocation {
	if x != nil {
		return x.GeoLocation
	}
	return nil
}

var File_command_gdt_proto protoreflect.FileDescriptor

var file_command_gdt_proto_rawDesc = []byte{
	0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x67, 0x64, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x0d, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x09, 0x61, 0x64, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e,
	0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaf, 0x01,
	0x0a, 0x13, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x64, 0x74, 0x41, 0x64, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x22,
	0xd3, 0x01, 0x0a, 0x18, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x64, 0x74, 0x41, 0x64, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x73, 0x12, 0x1d, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x45, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x22, 0xc0, 0x01, 0x0a, 0x1b, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74,
	0x47, 0x64, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x28, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x2c, 0x0a, 0x08, 0x61, 0x64,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08,
	0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0x74, 0x0a, 0x1f, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x2c, 0x0a, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0x60,
	0x0a, 0x1a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x41, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x1d, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73,
	0x22, 0x74, 0x0a, 0x1f, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x08, 0x61, 0x64, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x61, 0x64,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x22, 0xb7, 0x0c, 0x0a, 0x05, 0x47, 0x64, 0x74, 0x41, 0x44,
	0x12, 0x13, 0x0a, 0x05, 0x61, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x04, 0x61, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74,
	0x41, 0x44, 0x2e, 0x41, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x52, 0x0a, 0x61,
	0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0c, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x2c,
	0x0a, 0x12, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6c, 0x69, 0x63,
	0x6b, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x55, 0x72, 0x6c, 0x12, 0x2b, 0x0a, 0x11,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17,
	0x69, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x69, 0x6e, 0x67, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69,
	0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x64, 0x79, 0x6e, 0x61, 0x6d, 0x69,
	0x63, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x69, 0x73, 0x44, 0x79, 0x6e, 0x61, 0x6d, 0x69, 0x63, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x6a, 0x65, 0x63,
	0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x1a, 0x43, 0x0a,
	0x05, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f,
	0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x49, 0x6d, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x1a, 0x79, 0x0a, 0x13, 0x41, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x05, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x44, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52, 0x05,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x1a, 0x3f, 0x0a,
	0x09, 0x50, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x1a, 0xdf,
	0x05, 0x0a, 0x0a, 0x41, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x12, 0x53, 0x0a,
	0x13, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x44, 0x2e, 0x41, 0x64, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x12,
	0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x61, 0x64, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x64, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x34, 0x0a, 0x16, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x14, 0x61, 0x64, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61, 0x69,
	0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x6d,
	0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x1a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x76, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3e, 0x0a, 0x1b, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x73, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x19, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x42, 0x72, 0x65, 0x61, 0x6b, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67,
	0x68, 0x53, 0x69, 0x74, 0x65, 0x73, 0x65, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69,
	0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x44, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x70, 0x65, 0x63, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x70, 0x6c,
	0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6d, 0x61, 0x74, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70,
	0x6c, 0x61, 0x79, 0x61, 0x62, 0x6c, 0x65, 0x50, 0x61, 0x67, 0x65, 0x4d, 0x61, 0x74, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65,
	0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f,
	0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65,
	0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74,
	0x22, 0xa7, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x47, 0x64, 0x74,
	0x41, 0x64, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x47, 0x64, 0x74, 0x41, 0x44, 0x52, 0x03, 0x61, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f, 0x5f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x6f,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x22, 0x9c, 0x05, 0x0a, 0x0d, 0x47,
	0x64, 0x74, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x6e, 0x6b, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x63, 0x65, 0x6e,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x74,
	0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x61, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x65, 0x6c, 0x66, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x65, 0x6c, 0x66, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73,
	0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x12,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x49, 0x64, 0x22, 0xa6, 0x0b, 0x0a, 0x0a, 0x47, 0x64,
	0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74,
	0x69, 0x63, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x6d, 0x61, 0x74, 0x69, 0x63,
	0x53, 0x69, 0x74, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x69,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x62, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x69, 0x64,
	0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x69, 0x64,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x69, 0x64, 0x5f, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x65, 0x67, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x69, 0x64, 0x53,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6d, 0x70, 0x61,
	0x69, 0x67, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61,
	0x6d, 0x70, 0x61, 0x69, 0x67, 0x6e, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x43, 0x6f, 0x6e, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x67, 0x75, 0x61, 0x72, 0x61,
	0x6e, 0x74, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x73, 0x74, 0x47, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x73, 0x74,
	0x5f, 0x67, 0x75, 0x61, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x73, 0x74, 0x47, 0x75, 0x61,
	0x72, 0x61, 0x6e, 0x74, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x42, 0x75, 0x64, 0x67,
	0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x12, 0x3f, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x5f, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x41, 0x6e, 0x79, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x61, 0x6e, 0x64, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x10, 0x6c, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x67, 0x6f, 0x61, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x70, 0x74, 0x69, 0x6d, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x47, 0x6f, 0x61, 0x6c,
	0x12, 0x30, 0x0a, 0x14, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x17,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x2e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x33, 0x0a, 0x15, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x69, 0x6e, 0x67, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x1d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x1a, 0x29, 0x0a, 0x03, 0x41, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x61, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x61, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x1a, 0x4f, 0x0a, 0x0c, 0x47,
	0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x93, 0x01, 0x0a,
	0x09, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x29, 0x0a, 0x03, 0x61, 0x67,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x41, 0x67, 0x65,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x43, 0x0a,
	0x0c, 0x67, 0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64,
	0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x2e, 0x47, 0x65, 0x6f, 0x5f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x67, 0x65, 0x6f, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x18, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x47,
	0x64, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2f,
	0x0a, 0x08, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x41, 0x64,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12,
	0x1d, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x6f,
	0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x74, 0x6f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x22,
	0xd2, 0x01, 0x0a, 0x1b, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x47, 0x64, 0x74, 0x43,
	0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e,
	0x0a, 0x09, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x64, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x09, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x73, 0x12, 0x2a,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x47, 0x64, 0x74, 0x43, 0x6f, 0x6e,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x42, 0x29, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x68, 0x6e, 0x68, 0x75, 0x61, 0x78, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_command_gdt_proto_rawDescOnce sync.Once
	file_command_gdt_proto_rawDescData = file_command_gdt_proto_rawDesc
)

func file_command_gdt_proto_rawDescGZIP() []byte {
	file_command_gdt_proto_rawDescOnce.Do(func() {
		file_command_gdt_proto_rawDescData = protoimpl.X.CompressGZIP(file_command_gdt_proto_rawDescData)
	})
	return file_command_gdt_proto_rawDescData
}

var file_command_gdt_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_command_gdt_proto_goTypes = []interface{}{
	(*ImportGdtAdsCommand)(nil),             // 0: account.ImportGdtAdsCommand
	(*ImportGdtAdgroupsCommand)(nil),        // 1: account.ImportGdtAdgroupsCommand
	(*ImportGdtConversionsCommand)(nil),     // 2: account.ImportGdtConversionsCommand
	(*AssignEnterpriseAccountsCommand)(nil), // 3: account.AssignEnterpriseAccountsCommand
	(*AssignEnterpriseAdsCommand)(nil),      // 4: account.AssignEnterpriseAdsCommand
	(*AssignEnterpriseAdgroupsCommand)(nil), // 5: account.AssignEnterpriseAdgroupsCommand
	(*GdtAD)(nil),                           // 6: account.GdtAD
	(*ReceivedGdtAdsEvent)(nil),             // 7: account.ReceivedGdtAdsEvent
	(*GdtConversion)(nil),                   // 8: account.GdtConversion
	(*GdtAdgroup)(nil),                      // 9: account.GdtAdgroup
	(*ReceivedGdtAdgroupsEvent)(nil),        // 10: account.ReceivedGdtAdgroupsEvent
	(*ReceivedGdtConversionsEvent)(nil),     // 11: account.ReceivedGdtConversionsEvent
	(*GdtAD_Brand)(nil),                     // 12: account.GdtAD.Brand
	(*GdtAD_AdcreativeElements)(nil),        // 13: account.GdtAD.Adcreative_elements
	(*GdtAD_PageSpec)(nil),                  // 14: account.GdtAD.Page_spec
	(*GdtAD_Adcreative)(nil),                // 15: account.GdtAD.Adcreative
	(*GdtAdgroup_Age)(nil),                  // 16: account.GdtAdgroup.Age
	(*GdtAdgroup_GeoLocation)(nil),          // 17: account.GdtAdgroup.Geo_location
	(*GdtAdgroup_Targeting)(nil),            // 18: account.GdtAdgroup.Targeting
	(*Account)(nil),                         // 19: account.Account
	(*common.Filter)(nil),                   // 20: common.Filter
	(*Ad)(nil),                              // 21: account.Ad
	(*Adgroup)(nil),                         // 22: account.Adgroup
	(*anypb.Any)(nil),                       // 23: google.protobuf.Any
}
var file_command_gdt_proto_depIdxs = []int32{
	19, // 0: account.ImportGdtAdsCommand.account:type_name -> account.Account
	20, // 1: account.ImportGdtAdsCommand.filters:type_name -> common.Filter
	19, // 2: account.ImportGdtAdgroupsCommand.account:type_name -> account.Account
	20, // 3: account.ImportGdtAdgroupsCommand.filters:type_name -> common.Filter
	21, // 4: account.ImportGdtAdgroupsCommand.ads:type_name -> account.Ad
	19, // 5: account.ImportGdtConversionsCommand.account:type_name -> account.Account
	20, // 6: account.ImportGdtConversionsCommand.filters:type_name -> common.Filter
	22, // 7: account.ImportGdtConversionsCommand.adgroups:type_name -> account.Adgroup
	19, // 8: account.AssignEnterpriseAccountsCommand.accounts:type_name -> account.Account
	21, // 9: account.AssignEnterpriseAdsCommand.ads:type_name -> account.Ad
	22, // 10: account.AssignEnterpriseAdgroupsCommand.adgroups:type_name -> account.Adgroup
	15, // 11: account.GdtAD.adcreative:type_name -> account.GdtAD.Adcreative
	6,  // 12: account.ReceivedGdtAdsEvent.ads:type_name -> account.GdtAD
	19, // 13: account.ReceivedGdtAdsEvent.account:type_name -> account.Account
	8,  // 14: account.GdtAdgroup.conversion:type_name -> account.GdtConversion
	23, // 15: account.GdtAdgroup.expand_targeting:type_name -> google.protobuf.Any
	18, // 16: account.GdtAdgroup.targeting:type_name -> account.GdtAdgroup.Targeting
	9,  // 17: account.ReceivedGdtAdgroupsEvent.adgroups:type_name -> account.GdtAdgroup
	21, // 18: account.ReceivedGdtAdgroupsEvent.ads:type_name -> account.Ad
	19, // 19: account.ReceivedGdtAdgroupsEvent.account:type_name -> account.Account
	22, // 20: account.ReceivedGdtConversionsEvent.adgroupss:type_name -> account.Adgroup
	19, // 21: account.ReceivedGdtConversionsEvent.account:type_name -> account.Account
	8,  // 22: account.ReceivedGdtConversionsEvent.conversions:type_name -> account.GdtConversion
	12, // 23: account.GdtAD.Adcreative_elements.brand:type_name -> account.GdtAD.Brand
	13, // 24: account.GdtAD.Adcreative.adcreative_elements:type_name -> account.GdtAD.Adcreative_elements
	14, // 25: account.GdtAD.Adcreative.page_spec:type_name -> account.GdtAD.Page_spec
	16, // 26: account.GdtAdgroup.Targeting.age:type_name -> account.GdtAdgroup.Age
	17, // 27: account.GdtAdgroup.Targeting.geo_location:type_name -> account.GdtAdgroup.Geo_location
	28, // [28:28] is the sub-list for method output_type
	28, // [28:28] is the sub-list for method input_type
	28, // [28:28] is the sub-list for extension type_name
	28, // [28:28] is the sub-list for extension extendee
	0,  // [0:28] is the sub-list for field type_name
}

func init() { file_command_gdt_proto_init() }
func file_command_gdt_proto_init() {
	if File_command_gdt_proto != nil {
		return
	}
	file_account_proto_init()
	file_ads_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_command_gdt_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGdtAdsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGdtAdgroupsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImportGdtConversionsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEnterpriseAccountsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEnterpriseAdsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AssignEnterpriseAdgroupsCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedGdtAdsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtConversion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAdgroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedGdtAdgroupsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReceivedGdtConversionsEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAD_Brand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAD_AdcreativeElements); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAD_PageSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAD_Adcreative); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAdgroup_Age); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAdgroup_GeoLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_command_gdt_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GdtAdgroup_Targeting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_command_gdt_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_command_gdt_proto_goTypes,
		DependencyIndexes: file_command_gdt_proto_depIdxs,
		MessageInfos:      file_command_gdt_proto_msgTypes,
	}.Build()
	File_command_gdt_proto = out.File
	file_command_gdt_proto_rawDesc = nil
	file_command_gdt_proto_goTypes = nil
	file_command_gdt_proto_depIdxs = nil
}
