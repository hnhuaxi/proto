// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: ads.proto

package proto

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	common "github.com/hnhuaxi/proto/proto/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListAdsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *common.Paginate `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	EnterpriseId uint32           `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	UserId       uint32           `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filters      []string         `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	Columns      []string         `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	Scopes       []string         `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ListAdsRequest) Reset() {
	*x = ListAdsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ads_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdsRequest) ProtoMessage() {}

func (x *ListAdsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdsRequest.ProtoReflect.Descriptor instead.
func (*ListAdsRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{0}
}

func (x *ListAdsRequest) GetPage() *common.Paginate {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListAdsRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *ListAdsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListAdsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListAdsRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ListAdsRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ListAdsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ads  []*Ad                     `protobuf:"bytes,1,rep,name=ads,proto3" json:"ads,omitempty"`
	Page *common.PaginatedResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListAdsResponse) Reset() {
	*x = ListAdsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ads_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdsResponse) ProtoMessage() {}

func (x *ListAdsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdsResponse.ProtoReflect.Descriptor instead.
func (*ListAdsResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{1}
}

func (x *ListAdsResponse) GetAds() []*Ad {
	if x != nil {
		return x.Ads
	}
	return nil
}

func (x *ListAdsResponse) GetPage() *common.PaginatedResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type ListAdgroupsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *common.Paginate `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	EnterpriseId uint32           `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	UserId       uint32           `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Filters      []string         `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	Columns      []string         `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	Scopes       []string         `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
}

func (x *ListAdgroupsRequest) Reset() {
	*x = ListAdgroupsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ads_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdgroupsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdgroupsRequest) ProtoMessage() {}

func (x *ListAdgroupsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdgroupsRequest.ProtoReflect.Descriptor instead.
func (*ListAdgroupsRequest) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{2}
}

func (x *ListAdgroupsRequest) GetPage() *common.Paginate {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListAdgroupsRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *ListAdgroupsRequest) GetUserId() uint32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ListAdgroupsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListAdgroupsRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ListAdgroupsRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

type ListAdgroupsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Adgroups []*Adgroup                `protobuf:"bytes,1,rep,name=adgroups,proto3" json:"adgroups,omitempty"`
	Page     *common.PaginatedResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListAdgroupsResponse) Reset() {
	*x = ListAdgroupsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ads_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListAdgroupsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListAdgroupsResponse) ProtoMessage() {}

func (x *ListAdgroupsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ads_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListAdgroupsResponse.ProtoReflect.Descriptor instead.
func (*ListAdgroupsResponse) Descriptor() ([]byte, []int) {
	return file_ads_proto_rawDescGZIP(), []int{3}
}

func (x *ListAdgroupsResponse) GetAdgroups() []*Adgroup {
	if x != nil {
		return x.Adgroups
	}
	return nil
}

func (x *ListAdgroupsResponse) GetPage() *common.PaginatedResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

var File_ads_proto protoreflect.FileDescriptor

var file_ads_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x64, 0x73,
	0x1a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc0, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x5f, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x03, 0x61, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x41, 0x64, 0x52, 0x03, 0x61, 0x64, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc5, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x22, 0x73,
	0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x2e, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x08, 0x61, 0x64, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x32, 0xeb, 0x08, 0x0a, 0x0a, 0x41, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x7f, 0x0a, 0x07, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x12, 0x13, 0x2e,
	0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x49, 0x92, 0x41, 0x33, 0x0a, 0x0a, 0x41,
	0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x08, 0x4c, 0x69, 0x73, 0x74, 0x20,
	0x61, 0x64, 0x73, 0x1a, 0x1b, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x64,
	0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x12, 0x0b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f,
	0x61, 0x64, 0x73, 0x12, 0xcd, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x41, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x64, 0x73, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x01, 0x92, 0x41, 0x5b, 0x0a, 0x1c, 0x41, 0x64, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x20, 0x61, 0x64, 0x73, 0x1a, 0x26, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x20, 0x61,
	0x6c, 0x6c, 0x20, 0x61, 0x64, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x12, 0x26, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f,
	0x7b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x61, 0x64, 0x73, 0x12, 0xa1, 0x01, 0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41,
	0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19,
	0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x5c, 0x92, 0x41, 0x41, 0x0a, 0x0a,
	0x41, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x0d, 0x4c, 0x69, 0x73, 0x74,
	0x20, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x24, 0x4c, 0x69, 0x73, 0x74, 0x20,
	0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x64, 0x73,
	0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x12, 0x12, 0x10, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x61,
	0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xeb, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x12, 0x18, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x9b, 0x01, 0x92, 0x41, 0x65, 0x0a, 0x1c, 0x41,
	0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x18, 0x4c, 0x69, 0x73,
	0x74, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x20, 0x41, 0x64, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x1a, 0x2b, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x41, 0x64, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2d, 0x12, 0x2b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x7b, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0xaf, 0x01, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x41, 0x64, 0x73, 0x12, 0x13, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x41, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x64, 0x73,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x75, 0x92, 0x41, 0x4f, 0x0a, 0x1c, 0x41, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x0d, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x61,
	0x64, 0x73, 0x1a, 0x20, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x61, 0x6c,
	0x6c, 0x20, 0x61, 0x64, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x73, 0x12, 0xc7, 0x01, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x18, 0x2e, 0x61,
	0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x61, 0x64, 0x73, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x41, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x7e, 0x92, 0x41, 0x53, 0x0a, 0x16, 0x41, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x20, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x76, 0x63, 0x65, 0x12, 0x12,
	0x4c, 0x69, 0x73, 0x74, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x73, 0x1a, 0x25, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x55, 0x73, 0x65, 0x72, 0x20, 0x61, 0x6c,
	0x6c, 0x20, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12,
	0x20, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x7b,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x61, 0x64, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x42, 0x77, 0x92, 0x41, 0x4b, 0x12, 0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01,
	0x02, 0x72, 0x3e, 0x0a, 0x17, 0x4d, 0x58, 0x20, 0x61, 0x64, 0x73, 0x20, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x20, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x23, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x68, 0x6e, 0x68, 0x75, 0x61, 0x78, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6e,
	0x68, 0x75, 0x61, 0x78, 0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ads_proto_rawDescOnce sync.Once
	file_ads_proto_rawDescData = file_ads_proto_rawDesc
)

func file_ads_proto_rawDescGZIP() []byte {
	file_ads_proto_rawDescOnce.Do(func() {
		file_ads_proto_rawDescData = protoimpl.X.CompressGZIP(file_ads_proto_rawDescData)
	})
	return file_ads_proto_rawDescData
}

var file_ads_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_ads_proto_goTypes = []interface{}{
	(*ListAdsRequest)(nil),           // 0: ads.ListAdsRequest
	(*ListAdsResponse)(nil),          // 1: ads.ListAdsResponse
	(*ListAdgroupsRequest)(nil),      // 2: ads.ListAdgroupsRequest
	(*ListAdgroupsResponse)(nil),     // 3: ads.ListAdgroupsResponse
	(*common.Paginate)(nil),          // 4: common.Paginate
	(*Ad)(nil),                       // 5: account.Ad
	(*common.PaginatedResponse)(nil), // 6: common.PaginatedResponse
	(*Adgroup)(nil),                  // 7: account.Adgroup
}
var file_ads_proto_depIdxs = []int32{
	4,  // 0: ads.ListAdsRequest.page:type_name -> common.Paginate
	5,  // 1: ads.ListAdsResponse.ads:type_name -> account.Ad
	6,  // 2: ads.ListAdsResponse.page:type_name -> common.PaginatedResponse
	4,  // 3: ads.ListAdgroupsRequest.page:type_name -> common.Paginate
	7,  // 4: ads.ListAdgroupsResponse.adgroups:type_name -> account.Adgroup
	6,  // 5: ads.ListAdgroupsResponse.page:type_name -> common.PaginatedResponse
	0,  // 6: ads.AdsService.ListAds:input_type -> ads.ListAdsRequest
	0,  // 7: ads.AdsService.ListEnterpriseAds:input_type -> ads.ListAdsRequest
	2,  // 8: ads.AdsService.ListAdgroups:input_type -> ads.ListAdgroupsRequest
	2,  // 9: ads.AdsService.ListEnterpriseAdgroups:input_type -> ads.ListAdgroupsRequest
	0,  // 10: ads.AdsService.ListUserAds:input_type -> ads.ListAdsRequest
	2,  // 11: ads.AdsService.ListUserAdgroups:input_type -> ads.ListAdgroupsRequest
	1,  // 12: ads.AdsService.ListAds:output_type -> ads.ListAdsResponse
	1,  // 13: ads.AdsService.ListEnterpriseAds:output_type -> ads.ListAdsResponse
	3,  // 14: ads.AdsService.ListAdgroups:output_type -> ads.ListAdgroupsResponse
	3,  // 15: ads.AdsService.ListEnterpriseAdgroups:output_type -> ads.ListAdgroupsResponse
	1,  // 16: ads.AdsService.ListUserAds:output_type -> ads.ListAdsResponse
	3,  // 17: ads.AdsService.ListUserAdgroups:output_type -> ads.ListAdgroupsResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_ads_proto_init() }
func file_ads_proto_init() {
	if File_ads_proto != nil {
		return
	}
	file_account_proto_init()
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_ads_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ads_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ads_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdgroupsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ads_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListAdgroupsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ads_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ads_proto_goTypes,
		DependencyIndexes: file_ads_proto_depIdxs,
		MessageInfos:      file_ads_proto_msgTypes,
	}.Build()
	File_ads_proto = out.File
	file_ads_proto_rawDesc = nil
	file_ads_proto_goTypes = nil
	file_ads_proto_depIdxs = nil
}
