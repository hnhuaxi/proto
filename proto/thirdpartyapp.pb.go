// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: thirdpartyapp.proto

package proto

import (
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	common "github.com/hnhuaxi/platform/proto/common"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/anypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AppType int32

const (
	AppType_MiniProgram AppType = 0
	AppType_App         AppType = 1
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "MiniProgram",
		1: "App",
	}
	AppType_value = map[string]int32{
		"MiniProgram": 0,
		"App":         1,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_thirdpartyapp_proto_enumTypes[0].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_thirdpartyapp_proto_enumTypes[0]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{0}
}

type ThirdPartyApp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                              uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Provider                        string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"`
	AppType                         AppType                `protobuf:"varint,3,opt,name=app_type,json=appType,proto3,enum=thirdpartyapp.AppType" json:"app_type,omitempty"`
	EnterpriseId                    uint32                 `protobuf:"varint,4,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Enterprise                      *common.Enterprise     `protobuf:"bytes,5,opt,name=enterprise,proto3" json:"enterprise,omitempty"`
	CreatorId                       uint32                 `protobuf:"varint,6,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	Creator                         *common.User           `protobuf:"bytes,7,opt,name=creator,proto3" json:"creator,omitempty"`
	ManageAppId                     string                 `protobuf:"bytes,8,opt,name=manage_app_id,json=manageAppId,proto3" json:"manage_app_id,omitempty"`
	AppId                           string                 `protobuf:"bytes,9,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret                       string                 `protobuf:"bytes,10,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	Username                        string                 `protobuf:"bytes,11,opt,name=username,proto3" json:"username,omitempty"`
	Token                           string                 `protobuf:"bytes,12,opt,name=token,proto3" json:"token,omitempty"`
	EncodingAesKey                  string                 `protobuf:"bytes,13,opt,name=encoding_aes_key,json=encodingAesKey,proto3" json:"encoding_aes_key,omitempty"`
	Name                            string                 `protobuf:"bytes,14,opt,name=name,proto3" json:"name,omitempty"`
	ComponentAccessToken            string                 `protobuf:"bytes,15,opt,name=component_access_token,json=componentAccessToken,proto3" json:"component_access_token,omitempty"`
	ComponentAccessTokenExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=component_access_token_expires_at,json=componentAccessTokenExpiresAt,proto3" json:"component_access_token_expires_at,omitempty"`
	AuthorizerAccessToken           string                 `protobuf:"bytes,17,opt,name=authorizer_access_token,json=authorizerAccessToken,proto3" json:"authorizer_access_token,omitempty"`
	AuthorizerAccessTokenExpiresAt  *timestamppb.Timestamp `protobuf:"bytes,18,opt,name=authorizer_access_token_expires_at,json=authorizerAccessTokenExpiresAt,proto3" json:"authorizer_access_token_expires_at,omitempty"`
	AuthorizerRefreshToken          string                 `protobuf:"bytes,19,opt,name=authorizer_refresh_token,json=authorizerRefreshToken,proto3" json:"authorizer_refresh_token,omitempty"`
	AuthorizerRefreshTokenExpiresAt *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=authorizer_refresh_token_expires_at,json=authorizerRefreshTokenExpiresAt,proto3" json:"authorizer_refresh_token_expires_at,omitempty"`
	BlockedAt                       *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=blocked_at,json=blockedAt,proto3" json:"blocked_at,omitempty"`
	BlockedReason                   string                 `protobuf:"bytes,22,opt,name=blocked_reason,json=blockedReason,proto3" json:"blocked_reason,omitempty"`
	BlockedContent                  string                 `protobuf:"bytes,23,opt,name=blocked_content,json=blockedContent,proto3" json:"blocked_content,omitempty"`
	AppVersion                      string                 `protobuf:"bytes,24,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // 线上版本
	AuditId                         uint32                 `protobuf:"varint,25,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`         // 审核 ID
	AuditStatus                     string                 `protobuf:"bytes,26,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	AuditReason                     string                 `protobuf:"bytes,27,opt,name=audit_reason,json=auditReason,proto3" json:"audit_reason,omitempty"`
	// 独立应用
	IsIndependent bool                   `protobuf:"varint,28,opt,name=is_independent,json=isIndependent,proto3" json:"is_independent,omitempty"`
	Tags          []string               `protobuf:"bytes,29,rep,name=tags,proto3" json:"tags,omitempty"`
	CreatedTime   *timestamppb.Timestamp `protobuf:"bytes,30,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime   *timestamppb.Timestamp `protobuf:"bytes,31,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
}

func (x *ThirdPartyApp) Reset() {
	*x = ThirdPartyApp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThirdPartyApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThirdPartyApp) ProtoMessage() {}

func (x *ThirdPartyApp) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThirdPartyApp.ProtoReflect.Descriptor instead.
func (*ThirdPartyApp) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{0}
}

func (x *ThirdPartyApp) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ThirdPartyApp) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ThirdPartyApp) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_MiniProgram
}

func (x *ThirdPartyApp) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *ThirdPartyApp) GetEnterprise() *common.Enterprise {
	if x != nil {
		return x.Enterprise
	}
	return nil
}

func (x *ThirdPartyApp) GetCreatorId() uint32 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *ThirdPartyApp) GetCreator() *common.User {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *ThirdPartyApp) GetManageAppId() string {
	if x != nil {
		return x.ManageAppId
	}
	return ""
}

func (x *ThirdPartyApp) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *ThirdPartyApp) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *ThirdPartyApp) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ThirdPartyApp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *ThirdPartyApp) GetEncodingAesKey() string {
	if x != nil {
		return x.EncodingAesKey
	}
	return ""
}

func (x *ThirdPartyApp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ThirdPartyApp) GetComponentAccessToken() string {
	if x != nil {
		return x.ComponentAccessToken
	}
	return ""
}

func (x *ThirdPartyApp) GetComponentAccessTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ComponentAccessTokenExpiresAt
	}
	return nil
}

func (x *ThirdPartyApp) GetAuthorizerAccessToken() string {
	if x != nil {
		return x.AuthorizerAccessToken
	}
	return ""
}

func (x *ThirdPartyApp) GetAuthorizerAccessTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AuthorizerAccessTokenExpiresAt
	}
	return nil
}

func (x *ThirdPartyApp) GetAuthorizerRefreshToken() string {
	if x != nil {
		return x.AuthorizerRefreshToken
	}
	return ""
}

func (x *ThirdPartyApp) GetAuthorizerRefreshTokenExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AuthorizerRefreshTokenExpiresAt
	}
	return nil
}

func (x *ThirdPartyApp) GetBlockedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BlockedAt
	}
	return nil
}

func (x *ThirdPartyApp) GetBlockedReason() string {
	if x != nil {
		return x.BlockedReason
	}
	return ""
}

func (x *ThirdPartyApp) GetBlockedContent() string {
	if x != nil {
		return x.BlockedContent
	}
	return ""
}

func (x *ThirdPartyApp) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *ThirdPartyApp) GetAuditId() uint32 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *ThirdPartyApp) GetAuditStatus() string {
	if x != nil {
		return x.AuditStatus
	}
	return ""
}

func (x *ThirdPartyApp) GetAuditReason() string {
	if x != nil {
		return x.AuditReason
	}
	return ""
}

func (x *ThirdPartyApp) GetIsIndependent() bool {
	if x != nil {
		return x.IsIndependent
	}
	return false
}

func (x *ThirdPartyApp) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ThirdPartyApp) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ThirdPartyApp) GetUpdatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedTime
	}
	return nil
}

type CreateThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider       string  `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	AppType        AppType `protobuf:"varint,2,opt,name=app_type,json=appType,proto3,enum=thirdpartyapp.AppType" json:"app_type,omitempty"`
	EnterpriseId   uint32  `protobuf:"varint,3,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	ManageAppId    string  `protobuf:"bytes,4,opt,name=manage_app_id,json=manageAppId,proto3" json:"manage_app_id,omitempty"`
	AppId          string  `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	AppSecret      string  `protobuf:"bytes,6,opt,name=app_secret,json=appSecret,proto3" json:"app_secret,omitempty"`
	Token          string  `protobuf:"bytes,7,opt,name=token,proto3" json:"token,omitempty"`
	EncodingAesKey string  `protobuf:"bytes,8,opt,name=encoding_aes_key,json=encodingAesKey,proto3" json:"encoding_aes_key,omitempty"`
	Name           string  `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	AccessToken    string  `protobuf:"bytes,10,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	AppVersion     string  `protobuf:"bytes,11,opt,name=app_version,json=appVersion,proto3" json:"app_version,omitempty"` // 线上版本
	AuditId        uint32  `protobuf:"varint,12,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`         // 审核 ID
	AuditStatus    string  `protobuf:"bytes,13,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	AuditReason    string  `protobuf:"bytes,14,opt,name=audit_reason,json=auditReason,proto3" json:"audit_reason,omitempty"`
	// 独立应用
	Tags []string `protobuf:"bytes,15,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *CreateThirdPartyAppRequest) Reset() {
	*x = CreateThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThirdPartyAppRequest) ProtoMessage() {}

func (x *CreateThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*CreateThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{1}
}

func (x *CreateThirdPartyAppRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_MiniProgram
}

func (x *CreateThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *CreateThirdPartyAppRequest) GetManageAppId() string {
	if x != nil {
		return x.ManageAppId
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetEncodingAesKey() string {
	if x != nil {
		return x.EncodingAesKey
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAuditId() uint32 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

func (x *CreateThirdPartyAppRequest) GetAuditStatus() string {
	if x != nil {
		return x.AuditStatus
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetAuditReason() string {
	if x != nil {
		return x.AuditReason
	}
	return ""
}

func (x *CreateThirdPartyAppRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type CreateThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *ThirdPartyApp `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *CreateThirdPartyAppResponse) Reset() {
	*x = CreateThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateThirdPartyAppResponse) ProtoMessage() {}

func (x *CreateThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*CreateThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{2}
}

func (x *CreateThirdPartyAppResponse) GetApp() *ThirdPartyApp {
	if x != nil {
		return x.App
	}
	return nil
}

type ListThirdPartyAppsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page         *common.Paginate `protobuf:"bytes,1,opt,name=page,proto3" json:"page,omitempty"`
	Filters2     []*common.Filter `protobuf:"bytes,2,rep,name=filters2,proto3" json:"filters2,omitempty"`
	Sorts        []*common.Sort   `protobuf:"bytes,3,rep,name=sorts,proto3" json:"sorts,omitempty"`
	Filters      []string         `protobuf:"bytes,4,rep,name=filters,proto3" json:"filters,omitempty"`
	Columns      []string         `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	Scopes       []string         `protobuf:"bytes,6,rep,name=scopes,proto3" json:"scopes,omitempty"`
	EnterpriseId uint32           `protobuf:"varint,7,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
}

func (x *ListThirdPartyAppsRequest) Reset() {
	*x = ListThirdPartyAppsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThirdPartyAppsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThirdPartyAppsRequest) ProtoMessage() {}

func (x *ListThirdPartyAppsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThirdPartyAppsRequest.ProtoReflect.Descriptor instead.
func (*ListThirdPartyAppsRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{3}
}

func (x *ListThirdPartyAppsRequest) GetPage() *common.Paginate {
	if x != nil {
		return x.Page
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetFilters2() []*common.Filter {
	if x != nil {
		return x.Filters2
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetSorts() []*common.Sort {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetFilters() []string {
	if x != nil {
		return x.Filters
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetScopes() []string {
	if x != nil {
		return x.Scopes
	}
	return nil
}

func (x *ListThirdPartyAppsRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

type ListThirdPartyAppsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Apps []*ThirdPartyApp          `protobuf:"bytes,1,rep,name=apps,proto3" json:"apps,omitempty"`
	Page *common.PaginatedResponse `protobuf:"bytes,2,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *ListThirdPartyAppsResponse) Reset() {
	*x = ListThirdPartyAppsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThirdPartyAppsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThirdPartyAppsResponse) ProtoMessage() {}

func (x *ListThirdPartyAppsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThirdPartyAppsResponse.ProtoReflect.Descriptor instead.
func (*ListThirdPartyAppsResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{4}
}

func (x *ListThirdPartyAppsResponse) GetApps() []*ThirdPartyApp {
	if x != nil {
		return x.Apps
	}
	return nil
}

func (x *ListThirdPartyAppsResponse) GetPage() *common.PaginatedResponse {
	if x != nil {
		return x.Page
	}
	return nil
}

type DeleteThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteThirdPartyAppRequest) Reset() {
	*x = DeleteThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThirdPartyAppRequest) ProtoMessage() {}

func (x *DeleteThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*DeleteThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *ThirdPartyApp `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *DeleteThirdPartyAppResponse) Reset() {
	*x = DeleteThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteThirdPartyAppResponse) ProtoMessage() {}

func (x *DeleteThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*DeleteThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteThirdPartyAppResponse) GetApp() *ThirdPartyApp {
	if x != nil {
		return x.App
	}
	return nil
}

type UploadThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId uint32 `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	TemplateId   string `protobuf:"bytes,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ExtJson      string `protobuf:"bytes,4,opt,name=ext_json,json=extJson,proto3" json:"ext_json,omitempty"`
	Version      string `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Description  string `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Preview      bool   `protobuf:"varint,7,opt,name=preview,proto3" json:"preview,omitempty"`
	Path         string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *UploadThirdPartyAppRequest) Reset() {
	*x = UploadThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadThirdPartyAppRequest) ProtoMessage() {}

func (x *UploadThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*UploadThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{7}
}

func (x *UploadThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *UploadThirdPartyAppRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *UploadThirdPartyAppRequest) GetExtJson() string {
	if x != nil {
		return x.ExtJson
	}
	return ""
}

func (x *UploadThirdPartyAppRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *UploadThirdPartyAppRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UploadThirdPartyAppRequest) GetPreview() bool {
	if x != nil {
		return x.Preview
	}
	return false
}

func (x *UploadThirdPartyAppRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type UploadThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Qrcode  []byte `protobuf:"bytes,2,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
}

func (x *UploadThirdPartyAppResponse) Reset() {
	*x = UploadThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadThirdPartyAppResponse) ProtoMessage() {}

func (x *UploadThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*UploadThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{8}
}

func (x *UploadThirdPartyAppResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadThirdPartyAppResponse) GetQrcode() []byte {
	if x != nil {
		return x.Qrcode
	}
	return nil
}

type AuditItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Tag         string `protobuf:"bytes,2,opt,name=tag,proto3" json:"tag,omitempty"`
	FirstClass  string `protobuf:"bytes,3,opt,name=FirstClass,proto3" json:"FirstClass,omitempty"`
	SecondClass string `protobuf:"bytes,4,opt,name=SecondClass,proto3" json:"SecondClass,omitempty"`
	ThirdClass  string `protobuf:"bytes,5,opt,name=third_class,json=thirdClass,proto3" json:"third_class,omitempty"`
	Title       string `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	FirstId     string `protobuf:"bytes,7,opt,name=first_id,json=firstId,proto3" json:"first_id,omitempty"`
	SecondId    string `protobuf:"bytes,8,opt,name=second_id,json=secondId,proto3" json:"second_id,omitempty"`
	ThirdId     string `protobuf:"bytes,9,opt,name=third_id,json=thirdId,proto3" json:"third_id,omitempty"`
}

func (x *AuditItem) Reset() {
	*x = AuditItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuditItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuditItem) ProtoMessage() {}

func (x *AuditItem) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuditItem.ProtoReflect.Descriptor instead.
func (*AuditItem) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{9}
}

func (x *AuditItem) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *AuditItem) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *AuditItem) GetFirstClass() string {
	if x != nil {
		return x.FirstClass
	}
	return ""
}

func (x *AuditItem) GetSecondClass() string {
	if x != nil {
		return x.SecondClass
	}
	return ""
}

func (x *AuditItem) GetThirdClass() string {
	if x != nil {
		return x.ThirdClass
	}
	return ""
}

func (x *AuditItem) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AuditItem) GetFirstId() string {
	if x != nil {
		return x.FirstId
	}
	return ""
}

func (x *AuditItem) GetSecondId() string {
	if x != nil {
		return x.SecondId
	}
	return ""
}

func (x *AuditItem) GetThirdId() string {
	if x != nil {
		return x.ThirdId
	}
	return ""
}

type SubmitThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId     uint32       `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Items            []*AuditItem `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	PrivacyApiNotUse bool         `protobuf:"varint,4,opt,name=privacy_api_not_use,json=privacyApiNotUse,proto3" json:"privacy_api_not_use,omitempty"`
}

func (x *SubmitThirdPartyAppRequest) Reset() {
	*x = SubmitThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitThirdPartyAppRequest) ProtoMessage() {}

func (x *SubmitThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*SubmitThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{10}
}

func (x *SubmitThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *SubmitThirdPartyAppRequest) GetItems() []*AuditItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SubmitThirdPartyAppRequest) GetPrivacyApiNotUse() bool {
	if x != nil {
		return x.PrivacyApiNotUse
	}
	return false
}

type SubmitThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	AuditId uint32 `protobuf:"varint,2,opt,name=audit_id,json=auditId,proto3" json:"audit_id,omitempty"`
}

func (x *SubmitThirdPartyAppResponse) Reset() {
	*x = SubmitThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitThirdPartyAppResponse) ProtoMessage() {}

func (x *SubmitThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*SubmitThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{11}
}

func (x *SubmitThirdPartyAppResponse) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SubmitThirdPartyAppResponse) GetAuditId() uint32 {
	if x != nil {
		return x.AuditId
	}
	return 0
}

type ReleaseThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId uint32 `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
}

func (x *ReleaseThirdPartyAppRequest) Reset() {
	*x = ReleaseThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseThirdPartyAppRequest) ProtoMessage() {}

func (x *ReleaseThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*ReleaseThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{12}
}

func (x *ReleaseThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReleaseThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

type ReleaseThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *ReleaseThirdPartyAppResponse) Reset() {
	*x = ReleaseThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReleaseThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseThirdPartyAppResponse) ProtoMessage() {}

func (x *ReleaseThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*ReleaseThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{13}
}

func (x *ReleaseThirdPartyAppResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type WithdrawThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId uint32 `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
}

func (x *WithdrawThirdPartyAppRequest) Reset() {
	*x = WithdrawThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawThirdPartyAppRequest) ProtoMessage() {}

func (x *WithdrawThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*WithdrawThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{14}
}

func (x *WithdrawThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WithdrawThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

type WithdrawThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *WithdrawThirdPartyAppResponse) Reset() {
	*x = WithdrawThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawThirdPartyAppResponse) ProtoMessage() {}

func (x *WithdrawThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*WithdrawThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{15}
}

func (x *WithdrawThirdPartyAppResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type PreviewThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId uint32 `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	Path         string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *PreviewThirdPartyAppRequest) Reset() {
	*x = PreviewThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewThirdPartyAppRequest) ProtoMessage() {}

func (x *PreviewThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*PreviewThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{16}
}

func (x *PreviewThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PreviewThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *PreviewThirdPartyAppRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type PreviewThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Qrcode []byte `protobuf:"bytes,1,opt,name=qrcode,proto3" json:"qrcode,omitempty"`
}

func (x *PreviewThirdPartyAppResponse) Reset() {
	*x = PreviewThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviewThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviewThirdPartyAppResponse) ProtoMessage() {}

func (x *PreviewThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviewThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*PreviewThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{17}
}

func (x *PreviewThirdPartyAppResponse) GetQrcode() []byte {
	if x != nil {
		return x.Qrcode
	}
	return nil
}

type BatchSubmitThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids              []uint32     `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	EnterpriseId     uint32       `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	TemplateId       string       `protobuf:"bytes,3,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	ExtJson          string       `protobuf:"bytes,4,opt,name=ext_json,json=extJson,proto3" json:"ext_json,omitempty"`
	Version          string       `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`
	Description      string       `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Upload           bool         `protobuf:"varint,7,opt,name=upload,proto3" json:"upload,omitempty"`
	Items            []*AuditItem `protobuf:"bytes,8,rep,name=items,proto3" json:"items,omitempty"`
	PrivacyApiNotUse bool         `protobuf:"varint,9,opt,name=privacy_api_not_use,json=privacyApiNotUse,proto3" json:"privacy_api_not_use,omitempty"`
}

func (x *BatchSubmitThirdPartyAppRequest) Reset() {
	*x = BatchSubmitThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubmitThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubmitThirdPartyAppRequest) ProtoMessage() {}

func (x *BatchSubmitThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubmitThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*BatchSubmitThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{18}
}

func (x *BatchSubmitThirdPartyAppRequest) GetIds() []uint32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *BatchSubmitThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *BatchSubmitThirdPartyAppRequest) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *BatchSubmitThirdPartyAppRequest) GetExtJson() string {
	if x != nil {
		return x.ExtJson
	}
	return ""
}

func (x *BatchSubmitThirdPartyAppRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *BatchSubmitThirdPartyAppRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *BatchSubmitThirdPartyAppRequest) GetUpload() bool {
	if x != nil {
		return x.Upload
	}
	return false
}

func (x *BatchSubmitThirdPartyAppRequest) GetItems() []*AuditItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *BatchSubmitThirdPartyAppRequest) GetPrivacyApiNotUse() bool {
	if x != nil {
		return x.PrivacyApiNotUse
	}
	return false
}

type BatchSubmitThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Successes []bool `protobuf:"varint,1,rep,packed,name=successes,proto3" json:"successes,omitempty"`
}

func (x *BatchSubmitThirdPartyAppResponse) Reset() {
	*x = BatchSubmitThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchSubmitThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchSubmitThirdPartyAppResponse) ProtoMessage() {}

func (x *BatchSubmitThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchSubmitThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*BatchSubmitThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{19}
}

func (x *BatchSubmitThirdPartyAppResponse) GetSuccesses() []bool {
	if x != nil {
		return x.Successes
	}
	return nil
}

type ListThirdPartyTemplatesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider string `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
}

func (x *ListThirdPartyTemplatesRequest) Reset() {
	*x = ListThirdPartyTemplatesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThirdPartyTemplatesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThirdPartyTemplatesRequest) ProtoMessage() {}

func (x *ListThirdPartyTemplatesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThirdPartyTemplatesRequest.ProtoReflect.Descriptor instead.
func (*ListThirdPartyTemplatesRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{20}
}

func (x *ListThirdPartyTemplatesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ListThirdPartyTemplatesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Provider     string                                          `protobuf:"bytes,1,opt,name=provider,proto3" json:"provider,omitempty"`
	TemplateList []*ListThirdPartyTemplatesResponse_TemplateList `protobuf:"bytes,2,rep,name=template_list,json=templateList,proto3" json:"template_list,omitempty"`
}

func (x *ListThirdPartyTemplatesResponse) Reset() {
	*x = ListThirdPartyTemplatesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThirdPartyTemplatesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThirdPartyTemplatesResponse) ProtoMessage() {}

func (x *ListThirdPartyTemplatesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThirdPartyTemplatesResponse.ProtoReflect.Descriptor instead.
func (*ListThirdPartyTemplatesResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{21}
}

func (x *ListThirdPartyTemplatesResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse) GetTemplateList() []*ListThirdPartyTemplatesResponse_TemplateList {
	if x != nil {
		return x.TemplateList
	}
	return nil
}

type GetThirdPartyAppRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           uint32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	EnterpriseId uint32 `protobuf:"varint,2,opt,name=enterprise_id,json=enterpriseId,proto3" json:"enterprise_id,omitempty"`
	GetInfo      bool   `protobuf:"varint,3,opt,name=get_info,json=getInfo,proto3" json:"get_info,omitempty"`
	ViewToken    bool   `protobuf:"varint,4,opt,name=view_token,json=viewToken,proto3" json:"view_token,omitempty"`
}

func (x *GetThirdPartyAppRequest) Reset() {
	*x = GetThirdPartyAppRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThirdPartyAppRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThirdPartyAppRequest) ProtoMessage() {}

func (x *GetThirdPartyAppRequest) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThirdPartyAppRequest.ProtoReflect.Descriptor instead.
func (*GetThirdPartyAppRequest) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{22}
}

func (x *GetThirdPartyAppRequest) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetThirdPartyAppRequest) GetEnterpriseId() uint32 {
	if x != nil {
		return x.EnterpriseId
	}
	return 0
}

func (x *GetThirdPartyAppRequest) GetGetInfo() bool {
	if x != nil {
		return x.GetInfo
	}
	return false
}

func (x *GetThirdPartyAppRequest) GetViewToken() bool {
	if x != nil {
		return x.ViewToken
	}
	return false
}

type GetThirdPartyAppResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	App *ThirdPartyApp `protobuf:"bytes,1,opt,name=app,proto3" json:"app,omitempty"`
}

func (x *GetThirdPartyAppResponse) Reset() {
	*x = GetThirdPartyAppResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetThirdPartyAppResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetThirdPartyAppResponse) ProtoMessage() {}

func (x *GetThirdPartyAppResponse) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetThirdPartyAppResponse.ProtoReflect.Descriptor instead.
func (*GetThirdPartyAppResponse) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{23}
}

func (x *GetThirdPartyAppResponse) GetApp() *ThirdPartyApp {
	if x != nil {
		return x.App
	}
	return nil
}

type ListThirdPartyTemplatesResponse_TemplateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedTime            *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UserVersion            string                 `protobuf:"bytes,2,opt,name=user_version,json=userVersion,proto3" json:"user_version,omitempty"`
	UserDesc               string                 `protobuf:"bytes,3,opt,name=user_desc,json=userDesc,proto3" json:"user_desc,omitempty"`
	TemplateId             string                 `protobuf:"bytes,4,opt,name=template_id,json=templateId,proto3" json:"template_id,omitempty"`
	DraftId                string                 `protobuf:"bytes,5,opt,name=draft_id,json=draftId,proto3" json:"draft_id,omitempty"`
	SourceMiniprogramAppid string                 `protobuf:"bytes,6,opt,name=source_miniprogram_appid,json=sourceMiniprogramAppid,proto3" json:"source_miniprogram_appid,omitempty"`
	SourceMiniprogram      string                 `protobuf:"bytes,7,opt,name=source_miniprogram,json=sourceMiniprogram,proto3" json:"source_miniprogram,omitempty"`
	Developer              string                 `protobuf:"bytes,8,opt,name=developer,proto3" json:"developer,omitempty"`
	TemplateType           uint32                 `protobuf:"varint,9,opt,name=template_type,json=templateType,proto3" json:"template_type,omitempty"` // repeated google.protobuf.Any category_list = 10;
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) Reset() {
	*x = ListThirdPartyTemplatesResponse_TemplateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thirdpartyapp_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListThirdPartyTemplatesResponse_TemplateList) ProtoMessage() {}

func (x *ListThirdPartyTemplatesResponse_TemplateList) ProtoReflect() protoreflect.Message {
	mi := &file_thirdpartyapp_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListThirdPartyTemplatesResponse_TemplateList.ProtoReflect.Descriptor instead.
func (*ListThirdPartyTemplatesResponse_TemplateList) Descriptor() ([]byte, []int) {
	return file_thirdpartyapp_proto_rawDescGZIP(), []int{21, 0}
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetCreatedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedTime
	}
	return nil
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetUserVersion() string {
	if x != nil {
		return x.UserVersion
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetUserDesc() string {
	if x != nil {
		return x.UserDesc
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetTemplateId() string {
	if x != nil {
		return x.TemplateId
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetDraftId() string {
	if x != nil {
		return x.DraftId
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetSourceMiniprogramAppid() string {
	if x != nil {
		return x.SourceMiniprogramAppid
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetSourceMiniprogram() string {
	if x != nil {
		return x.SourceMiniprogram
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetDeveloper() string {
	if x != nil {
		return x.Developer
	}
	return ""
}

func (x *ListThirdPartyTemplatesResponse_TemplateList) GetTemplateType() uint32 {
	if x != nil {
		return x.TemplateType
	}
	return 0
}

var File_thirdpartyapp_proto protoreflect.FileDescriptor

var file_thirdpartyapp_proto_rawDesc = []byte{
	0x0a, 0x13, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x1a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x61, 0x6e, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d,
	0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x0a, 0x0a, 0x0d, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x12, 0x31, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79,
	0x61, 0x70, 0x70, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70, 0x70,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x52, 0x0a, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x65, 0x73,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x41, 0x65, 0x73, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x34,
	0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x64, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1d, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x66, 0x0a, 0x22, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72,
	0x5f, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1e, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x18, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x68, 0x0a, 0x23, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x1f, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x65, 0x72, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x39,
	0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x27, 0x0a, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x65, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x61, 0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75,
	0x64, 0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x61, 0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x1d, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0xf7, 0x03, 0x0a, 0x1a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12,
	0x31, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x16, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2e, 0x41, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x41, 0x70, 0x70, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x69, 0x6e, 0x67, 0x5f, 0x61, 0x65, 0x73, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x41, 0x65, 0x73, 0x4b, 0x65,
	0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x64,
	0x69, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x75, 0x64, 0x69, 0x74,
	0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x4d,
	0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0x82, 0x02,
	0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x32, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x32, 0x12, 0x22, 0x0a,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x22, 0x7d, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x30, 0x0a, 0x04, 0x61, 0x70, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x04, 0x61, 0x70,
	0x70, 0x73, 0x12, 0x2d, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x2c, 0x0a, 0x1a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x4d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x22, 0xf7,
	0x01, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x74, 0x4a, 0x73, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x4f, 0x0a, 0x1b, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x83, 0x02, 0x0a, 0x09, 0x41, 0x75,
	0x64, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x46, 0x69, 0x72, 0x73, 0x74, 0x43, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x68, 0x69, 0x72,
	0x64, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x68, 0x69, 0x72, 0x64, 0x49, 0x64, 0x22,
	0xb0, 0x01, 0x0a, 0x1a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61,
	0x70, 0x70, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x41, 0x70, 0x69, 0x4e, 0x6f, 0x74, 0x55,
	0x73, 0x65, 0x22, 0x48, 0x0a, 0x1b, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x75, 0x64, 0x69, 0x74, 0x49, 0x64, 0x22, 0x52, 0x0a, 0x1b,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64,
	0x22, 0x38, 0x0a, 0x1c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x53, 0x0a, 0x1c, 0x57, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22,
	0x39, 0x0a, 0x1d, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x66, 0x0a, 0x1b, 0x50, 0x72,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x36, 0x0a, 0x1c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x06, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x1f, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x78, 0x74, 0x5f, 0x6a, 0x73,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x74, 0x4a, 0x73, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79,
	0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x41, 0x70, 0x69, 0x4e, 0x6f,
	0x74, 0x55, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x20, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x3c, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x22, 0x99, 0x04, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x61, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3c, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xf6, 0x02, 0x0a, 0x0d, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0c, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x72, 0x61,
	0x66, 0x74, 0x49, 0x64, 0x12, 0x38, 0x0a, 0x18, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4d, 0x69,
	0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x2d,
	0x0a, 0x12, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x4d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x67, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a,
	0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4a, 0x0a, 0x18, 0x47,
	0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x2e, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x03, 0x61, 0x70, 0x70, 0x2a, 0x23, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x4d, 0x69, 0x6e, 0x69, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x10, 0x01, 0x32, 0xbb, 0x1c, 0x0a,
	0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xe9, 0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x29, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7b, 0x92, 0x41, 0x57, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x1a, 0x27, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x20,
	0x61, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70,
	0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70,
	0x73, 0x12, 0xe3, 0x01, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x73, 0x12, 0x28, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61,
	0x70, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x92,
	0x41, 0x57, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x73, 0x1a,
	0x28, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x12, 0x9b, 0x02, 0x0a, 0x1c, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x73, 0x12, 0x28, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x29, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61,
	0x70, 0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x01,
	0x92, 0x41, 0x69, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41,
	0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15, 0x4c, 0x69, 0x73,
	0x74, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70,
	0x70, 0x73, 0x1a, 0x28, 0x4c, 0x69, 0x73, 0x74, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x73, 0x20, 0x6f, 0x6e,
	0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x33, 0x12, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x7b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x73, 0x12, 0x87, 0x02, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65,
	0x73, 0x12, 0x2d, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2e, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8c, 0x01, 0x92, 0x41, 0x62, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x4c, 0x69,
	0x73, 0x74, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x20, 0x61, 0x70, 0x70, 0x73, 0x1a, 0x29, 0x4c,
	0x69, 0x73, 0x74, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20,
	0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65,
	0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01,
	0x2a, 0x1a, 0x1c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x12,
	0xdc, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x12, 0x26, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x74,
	0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x77, 0x92, 0x41, 0x51, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x13, 0x47, 0x65, 0x74, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x20, 0x61, 0x70, 0x70, 0x1a, 0x24, 0x67, 0x65, 0x74, 0x20, 0x61, 0x20, 0x74, 0x68, 0x69,
	0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x12, 0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0xeb,
	0x01, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x29, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7d, 0x92,
	0x41, 0x57, 0x0a, 0x14, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70,
	0x1a, 0x27, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x20, 0x61, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x20, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68,
	0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x2a,
	0x1b, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x9d, 0x02, 0x0a,
	0x13, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x12, 0x29, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x61, 0x70, 0x70, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64,
	0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79,
	0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xae, 0x01, 0x92, 0x41,
	0x7e, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70,
	0x1a, 0x3d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x61, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x6f,
	0x66, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70,
	0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x1a, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76,
	0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73,
	0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0xa4, 0x02, 0x0a,
	0x14, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72,
	0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x2b, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2,
	0x01, 0x92, 0x41, 0x80, 0x01, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x20, 0x61, 0x70, 0x70, 0x1a, 0x3e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x61,
	0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x1a, 0x23,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x70, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x12, 0x9d, 0x02, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x29, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x6d,
	0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69,
	0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xae, 0x01, 0x92, 0x41, 0x7e, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x15, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x1a, 0x3d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x20,
	0x61, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x27, 0x3a, 0x01, 0x2a, 0x1a,
	0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61,
	0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x73, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x12, 0xd2, 0x02, 0x0a, 0x18, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70,
	0x12, 0x2e, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x2f, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70,
	0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72,
	0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0xd4, 0x01, 0x92, 0x41, 0x96, 0x01, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45,
	0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x24, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x20, 0x74,
	0x6f, 0x20, 0x61, 0x75, 0x64, 0x69, 0x74, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x1a, 0x46, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x20, 0x61, 0x20, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x20, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x61, 0x75, 0x64, 0x69, 0x74, 0x20,
	0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20,
	0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x34, 0x3a, 0x01, 0x2a, 0x22, 0x2f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x2f, 0x7b, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x62, 0x61, 0x74, 0x63,
	0x68, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0xa4, 0x02, 0x0a, 0x14, 0x52, 0x65, 0x6c,
	0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x70, 0x12, 0x2a, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x2e, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x52, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41,
	0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xb2, 0x01, 0x92, 0x41, 0x80,
	0x01, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69,
	0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x16, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70,
	0x70, 0x1a, 0x3e, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x61, 0x20, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x20, 0x6f, 0x66, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61,
	0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x28, 0x3a, 0x01, 0x2a, 0x1a, 0x23, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x2f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12,
	0xbf, 0x02, 0x0a, 0x19, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x2e, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2f, 0x2e,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61,
	0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc0,
	0x01, 0x92, 0x41, 0x81, 0x01, 0x0a, 0x26, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74,
	0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x23, 0x62,
	0x61, 0x74, 0x63, 0x68, 0x20, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x6d, 0x75, 0x6c,
	0x74, 0x69, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70,
	0x70, 0x73, 0x1a, 0x32, 0x62, 0x61, 0x74, 0x63, 0x68, 0x20, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x20, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x20, 0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72,
	0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x73, 0x20, 0x6f, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x3a, 0x01, 0x2a, 0x22,
	0x30, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x2f, 0x7b, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73,
	0x65, 0x12, 0xb6, 0x02, 0x0a, 0x15, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x54, 0x68,
	0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x12, 0x2b, 0x2e, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x74, 0x68, 0x69, 0x72, 0x64,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x54, 0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xc1, 0x01, 0x92, 0x41, 0x8e, 0x01, 0x0a, 0x26, 0x54,
	0x68, 0x69, 0x72, 0x64, 0x50, 0x61, 0x72, 0x74, 0x79, 0x41, 0x70, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x20, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x20,
	0x74, 0x68, 0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x1a, 0x45, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x20, 0x61,
	0x20, 0x61, 0x75, 0x64, 0x69, 0x74, 0x20, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x20, 0x6d,
	0x69, 0x6e, 0x69, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x20, 0x6f, 0x66, 0x20, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x20, 0x61, 0x70, 0x70, 0x20, 0x6f, 0x6e, 0x20,
	0x74, 0x68, 0x65, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x29, 0x3a, 0x01, 0x2a, 0x1a, 0x24, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x68,
	0x69, 0x72, 0x64, 0x70, 0x61, 0x72, 0x74, 0x79, 0x61, 0x70, 0x70, 0x73, 0x2f, 0x7b, 0x69, 0x64,
	0x7d, 0x2f, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x42, 0x77, 0x92, 0x41, 0x4b, 0x12,
	0x05, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x72, 0x3e, 0x0a, 0x17, 0x4d, 0x58,
	0x20, 0x61, 0x64, 0x73, 0x20, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x20, 0x67, 0x61,
	0x74, 0x65, 0x77, 0x61, 0x79, 0x12, 0x23, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6e, 0x68, 0x75, 0x61, 0x78,
	0x69, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5a, 0x27, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x6e, 0x68, 0x75, 0x61, 0x78, 0x69, 0x2f, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thirdpartyapp_proto_rawDescOnce sync.Once
	file_thirdpartyapp_proto_rawDescData = file_thirdpartyapp_proto_rawDesc
)

func file_thirdpartyapp_proto_rawDescGZIP() []byte {
	file_thirdpartyapp_proto_rawDescOnce.Do(func() {
		file_thirdpartyapp_proto_rawDescData = protoimpl.X.CompressGZIP(file_thirdpartyapp_proto_rawDescData)
	})
	return file_thirdpartyapp_proto_rawDescData
}

var file_thirdpartyapp_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_thirdpartyapp_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_thirdpartyapp_proto_goTypes = []interface{}{
	(AppType)(0),                                         // 0: thirdpartyapp.AppType
	(*ThirdPartyApp)(nil),                                // 1: thirdpartyapp.ThirdPartyApp
	(*CreateThirdPartyAppRequest)(nil),                   // 2: thirdpartyapp.CreateThirdPartyAppRequest
	(*CreateThirdPartyAppResponse)(nil),                  // 3: thirdpartyapp.CreateThirdPartyAppResponse
	(*ListThirdPartyAppsRequest)(nil),                    // 4: thirdpartyapp.ListThirdPartyAppsRequest
	(*ListThirdPartyAppsResponse)(nil),                   // 5: thirdpartyapp.ListThirdPartyAppsResponse
	(*DeleteThirdPartyAppRequest)(nil),                   // 6: thirdpartyapp.DeleteThirdPartyAppRequest
	(*DeleteThirdPartyAppResponse)(nil),                  // 7: thirdpartyapp.DeleteThirdPartyAppResponse
	(*UploadThirdPartyAppRequest)(nil),                   // 8: thirdpartyapp.UploadThirdPartyAppRequest
	(*UploadThirdPartyAppResponse)(nil),                  // 9: thirdpartyapp.UploadThirdPartyAppResponse
	(*AuditItem)(nil),                                    // 10: thirdpartyapp.AuditItem
	(*SubmitThirdPartyAppRequest)(nil),                   // 11: thirdpartyapp.SubmitThirdPartyAppRequest
	(*SubmitThirdPartyAppResponse)(nil),                  // 12: thirdpartyapp.SubmitThirdPartyAppResponse
	(*ReleaseThirdPartyAppRequest)(nil),                  // 13: thirdpartyapp.ReleaseThirdPartyAppRequest
	(*ReleaseThirdPartyAppResponse)(nil),                 // 14: thirdpartyapp.ReleaseThirdPartyAppResponse
	(*WithdrawThirdPartyAppRequest)(nil),                 // 15: thirdpartyapp.WithdrawThirdPartyAppRequest
	(*WithdrawThirdPartyAppResponse)(nil),                // 16: thirdpartyapp.WithdrawThirdPartyAppResponse
	(*PreviewThirdPartyAppRequest)(nil),                  // 17: thirdpartyapp.PreviewThirdPartyAppRequest
	(*PreviewThirdPartyAppResponse)(nil),                 // 18: thirdpartyapp.PreviewThirdPartyAppResponse
	(*BatchSubmitThirdPartyAppRequest)(nil),              // 19: thirdpartyapp.BatchSubmitThirdPartyAppRequest
	(*BatchSubmitThirdPartyAppResponse)(nil),             // 20: thirdpartyapp.BatchSubmitThirdPartyAppResponse
	(*ListThirdPartyTemplatesRequest)(nil),               // 21: thirdpartyapp.ListThirdPartyTemplatesRequest
	(*ListThirdPartyTemplatesResponse)(nil),              // 22: thirdpartyapp.ListThirdPartyTemplatesResponse
	(*GetThirdPartyAppRequest)(nil),                      // 23: thirdpartyapp.GetThirdPartyAppRequest
	(*GetThirdPartyAppResponse)(nil),                     // 24: thirdpartyapp.GetThirdPartyAppResponse
	(*ListThirdPartyTemplatesResponse_TemplateList)(nil), // 25: thirdpartyapp.ListThirdPartyTemplatesResponse.Template_list
	(*common.Enterprise)(nil),                            // 26: common.Enterprise
	(*common.User)(nil),                                  // 27: common.User
	(*timestamppb.Timestamp)(nil),                        // 28: google.protobuf.Timestamp
	(*common.Paginate)(nil),                              // 29: common.Paginate
	(*common.Filter)(nil),                                // 30: common.Filter
	(*common.Sort)(nil),                                  // 31: common.Sort
	(*common.PaginatedResponse)(nil),                     // 32: common.PaginatedResponse
}
var file_thirdpartyapp_proto_depIdxs = []int32{
	0,  // 0: thirdpartyapp.ThirdPartyApp.app_type:type_name -> thirdpartyapp.AppType
	26, // 1: thirdpartyapp.ThirdPartyApp.enterprise:type_name -> common.Enterprise
	27, // 2: thirdpartyapp.ThirdPartyApp.creator:type_name -> common.User
	28, // 3: thirdpartyapp.ThirdPartyApp.component_access_token_expires_at:type_name -> google.protobuf.Timestamp
	28, // 4: thirdpartyapp.ThirdPartyApp.authorizer_access_token_expires_at:type_name -> google.protobuf.Timestamp
	28, // 5: thirdpartyapp.ThirdPartyApp.authorizer_refresh_token_expires_at:type_name -> google.protobuf.Timestamp
	28, // 6: thirdpartyapp.ThirdPartyApp.blocked_at:type_name -> google.protobuf.Timestamp
	28, // 7: thirdpartyapp.ThirdPartyApp.created_time:type_name -> google.protobuf.Timestamp
	28, // 8: thirdpartyapp.ThirdPartyApp.updated_time:type_name -> google.protobuf.Timestamp
	0,  // 9: thirdpartyapp.CreateThirdPartyAppRequest.app_type:type_name -> thirdpartyapp.AppType
	1,  // 10: thirdpartyapp.CreateThirdPartyAppResponse.app:type_name -> thirdpartyapp.ThirdPartyApp
	29, // 11: thirdpartyapp.ListThirdPartyAppsRequest.page:type_name -> common.Paginate
	30, // 12: thirdpartyapp.ListThirdPartyAppsRequest.filters2:type_name -> common.Filter
	31, // 13: thirdpartyapp.ListThirdPartyAppsRequest.sorts:type_name -> common.Sort
	1,  // 14: thirdpartyapp.ListThirdPartyAppsResponse.apps:type_name -> thirdpartyapp.ThirdPartyApp
	32, // 15: thirdpartyapp.ListThirdPartyAppsResponse.page:type_name -> common.PaginatedResponse
	1,  // 16: thirdpartyapp.DeleteThirdPartyAppResponse.app:type_name -> thirdpartyapp.ThirdPartyApp
	10, // 17: thirdpartyapp.SubmitThirdPartyAppRequest.items:type_name -> thirdpartyapp.AuditItem
	10, // 18: thirdpartyapp.BatchSubmitThirdPartyAppRequest.items:type_name -> thirdpartyapp.AuditItem
	25, // 19: thirdpartyapp.ListThirdPartyTemplatesResponse.template_list:type_name -> thirdpartyapp.ListThirdPartyTemplatesResponse.Template_list
	1,  // 20: thirdpartyapp.GetThirdPartyAppResponse.app:type_name -> thirdpartyapp.ThirdPartyApp
	28, // 21: thirdpartyapp.ListThirdPartyTemplatesResponse.Template_list.created_time:type_name -> google.protobuf.Timestamp
	2,  // 22: thirdpartyapp.ThirdPartyAppService.CreateThirdPartyApp:input_type -> thirdpartyapp.CreateThirdPartyAppRequest
	4,  // 23: thirdpartyapp.ThirdPartyAppService.ListThirdPartyApps:input_type -> thirdpartyapp.ListThirdPartyAppsRequest
	4,  // 24: thirdpartyapp.ThirdPartyAppService.ListEnterpriseThirdPartyApps:input_type -> thirdpartyapp.ListThirdPartyAppsRequest
	21, // 25: thirdpartyapp.ThirdPartyAppService.ListThirdPartyTemplates:input_type -> thirdpartyapp.ListThirdPartyTemplatesRequest
	23, // 26: thirdpartyapp.ThirdPartyAppService.GetThirdPartyApp:input_type -> thirdpartyapp.GetThirdPartyAppRequest
	6,  // 27: thirdpartyapp.ThirdPartyAppService.DeleteThirdPartyApp:input_type -> thirdpartyapp.DeleteThirdPartyAppRequest
	8,  // 28: thirdpartyapp.ThirdPartyAppService.UploadThirdPartyApp:input_type -> thirdpartyapp.UploadThirdPartyAppRequest
	17, // 29: thirdpartyapp.ThirdPartyAppService.PreviewThirdPartyApp:input_type -> thirdpartyapp.PreviewThirdPartyAppRequest
	11, // 30: thirdpartyapp.ThirdPartyAppService.SubmitThirdPartyApp:input_type -> thirdpartyapp.SubmitThirdPartyAppRequest
	19, // 31: thirdpartyapp.ThirdPartyAppService.BatchSubmitThirdPartyApp:input_type -> thirdpartyapp.BatchSubmitThirdPartyAppRequest
	13, // 32: thirdpartyapp.ThirdPartyAppService.ReleaseThirdPartyApp:input_type -> thirdpartyapp.ReleaseThirdPartyAppRequest
	19, // 33: thirdpartyapp.ThirdPartyAppService.BatchReleaseThirdPartyApp:input_type -> thirdpartyapp.BatchSubmitThirdPartyAppRequest
	15, // 34: thirdpartyapp.ThirdPartyAppService.WithdrawThirdPartyApp:input_type -> thirdpartyapp.WithdrawThirdPartyAppRequest
	3,  // 35: thirdpartyapp.ThirdPartyAppService.CreateThirdPartyApp:output_type -> thirdpartyapp.CreateThirdPartyAppResponse
	5,  // 36: thirdpartyapp.ThirdPartyAppService.ListThirdPartyApps:output_type -> thirdpartyapp.ListThirdPartyAppsResponse
	5,  // 37: thirdpartyapp.ThirdPartyAppService.ListEnterpriseThirdPartyApps:output_type -> thirdpartyapp.ListThirdPartyAppsResponse
	22, // 38: thirdpartyapp.ThirdPartyAppService.ListThirdPartyTemplates:output_type -> thirdpartyapp.ListThirdPartyTemplatesResponse
	24, // 39: thirdpartyapp.ThirdPartyAppService.GetThirdPartyApp:output_type -> thirdpartyapp.GetThirdPartyAppResponse
	7,  // 40: thirdpartyapp.ThirdPartyAppService.DeleteThirdPartyApp:output_type -> thirdpartyapp.DeleteThirdPartyAppResponse
	9,  // 41: thirdpartyapp.ThirdPartyAppService.UploadThirdPartyApp:output_type -> thirdpartyapp.UploadThirdPartyAppResponse
	18, // 42: thirdpartyapp.ThirdPartyAppService.PreviewThirdPartyApp:output_type -> thirdpartyapp.PreviewThirdPartyAppResponse
	12, // 43: thirdpartyapp.ThirdPartyAppService.SubmitThirdPartyApp:output_type -> thirdpartyapp.SubmitThirdPartyAppResponse
	20, // 44: thirdpartyapp.ThirdPartyAppService.BatchSubmitThirdPartyApp:output_type -> thirdpartyapp.BatchSubmitThirdPartyAppResponse
	14, // 45: thirdpartyapp.ThirdPartyAppService.ReleaseThirdPartyApp:output_type -> thirdpartyapp.ReleaseThirdPartyAppResponse
	20, // 46: thirdpartyapp.ThirdPartyAppService.BatchReleaseThirdPartyApp:output_type -> thirdpartyapp.BatchSubmitThirdPartyAppResponse
	16, // 47: thirdpartyapp.ThirdPartyAppService.WithdrawThirdPartyApp:output_type -> thirdpartyapp.WithdrawThirdPartyAppResponse
	35, // [35:48] is the sub-list for method output_type
	22, // [22:35] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_thirdpartyapp_proto_init() }
func file_thirdpartyapp_proto_init() {
	if File_thirdpartyapp_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thirdpartyapp_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThirdPartyApp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThirdPartyAppsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThirdPartyAppsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuditItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReleaseThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviewThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubmitThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchSubmitThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThirdPartyTemplatesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThirdPartyTemplatesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThirdPartyAppRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetThirdPartyAppResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thirdpartyapp_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListThirdPartyTemplatesResponse_TemplateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thirdpartyapp_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thirdpartyapp_proto_goTypes,
		DependencyIndexes: file_thirdpartyapp_proto_depIdxs,
		EnumInfos:         file_thirdpartyapp_proto_enumTypes,
		MessageInfos:      file_thirdpartyapp_proto_msgTypes,
	}.Build()
	File_thirdpartyapp_proto = out.File
	file_thirdpartyapp_proto_rawDesc = nil
	file_thirdpartyapp_proto_goTypes = nil
	file_thirdpartyapp_proto_depIdxs = nil
}
